{"version":3,"sources":["reportWebVitals.ts","services/web3.ts","hooks/useMetamask.ts","components/metamask-btn.tsx","utils/cut-string.ts","assets/icons/logo.svg","components/header.tsx","components/footer.tsx","components/tab-head.tsx","components/breadcrumbs.tsx","layouts/default-layout.tsx","pages/art/index.tsx","pages/item/index.tsx","store/domains.ts","components/filter.tsx","assets/icons/not-available.svg","assets/icons/is-mine.svg","components/domain.tsx","pages/main/index.tsx","routes.tsx","store/index.ts","theme.ts","index.tsx"],"names":["onPerfEntry","Web3Provider","web3","account","networkType","init","a","prepareWeb3","fetchNetworkName","addListeners","window","ethereum","on","error","console","log","connectWithMetamask","ethEnabled","Error","disconnectAccount","request","method","params","eth_accounts","enable","eth","net","getNetworkType","fetchAccount","getAccounts","accounts","length","hasWeb3","getAccoount","getNetworkName","isMainNetwork","Web3","givenProvider","this","useMetamask","useState","setHasWeb3","setAccount","useEffect","fetchAccounts","timerId","setInterval","clearInterval","handleConnectWithMetamask","useCallback","handleDisconnectFromMetamask","MetamaskBtn","displayedAddress","useMemo","str","size","slice","styles","useStyles","handleClick","Button","className","btn","hasAccount","onClick","Tooltip","title","Link","href","target","rel","Typography","AccountButton","Box","makeStyles","borderRadius","border","color","padding","maxWidth","display","textAlign","textDecoration","width","minHeight","justifyContent","alignItems","avatar","marginRight","Header","fetchedDomains","useSelector","state","domains","domainLength","availableDomainsLength","filter","domain","isAvailable","component","py","Container","flex","to","src","logo","alt","subtitle","link","pt","counts","fontSize","fontWeight","borderBottom","marginLeft","Footer","TabHead","tabs","currentTabIndex","onChangeTab","container","mx","mr","map","index","type","tab","activeTab","background","whiteSpace","textOverflow","overflow","textTransform","position","margin","content","backgroundColor","height","left","right","bottom","Breadcrumbs","paths","path","url","route","DefaultLayout","children","hasTabs","hasBreadCrumbs","history","useHistory","currentIndex","push","flexDirection","bgcolor","Array","isArray","React","Children","child","ArtsPage","DomainPage","location","useLocation","currentPaths","pathname","replace","minWidth","ml","domainTypesWithFlags","selected","availabilityTypesWithFlags","availability","getDomainsByFilters","selectedTypes","find","categories","toLowerCase","includes","counter","createSlice","name","initialState","types","availabilities","filteredDomains","reducers","setFilter","action","payload","filteredDomainsByAvailability","setDomains","domainsReducer","reducer","actions","Filter","dispatch","useDispatch","filteredLength","handleTypeSelect","selectedType","onClear","all","handleChangeAvailability","innerContainer","px","pb","clear","Chip","label","chip","activeChip","clickable","variant","FormControlLabel","formControl","control","Switch","checked","switch","onChange","borderColor","borderWidth","Domain","price","associatedHash","isMine","card","style","mb","cardInner","category","contained","perYear","availableName","line","badge","notAvailableIcon","badgeIcon","badgeText","isMineIcon","top","transform","zIndex","whenAvailable","picture","MainPage","ScrollToTop","withRouter","unlisten","listen","scrollTo","Routes","basename","process","exact","store","configureStore","theme","createMuiTheme","palette","default","primary","main","typography","fontFamily","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB"],"mappings":"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","file":"static/js/main.84f41a42.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals'\n\nexport const reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n","import Web3 from 'web3'\n\nclass Provider {\n  private web3: any\n  private account = null\n  public networkType: string = ''\n\n  constructor() {\n    this.init()\n  }\n\n  init = async () => {\n    await this.prepareWeb3()\n    await this.fetchNetworkName()\n  }\n\n  addListeners = () => {\n    window.ethereum.on('disconnect', (error: any) => {\n      console.log(error, 'disconnect error')\n    })\n\n    window.ethereum.on('connect', (error: any) => {\n      console.log(error, 'connect error')\n    })\n  }\n\n  connectWithMetamask = () => {\n    if (!this.ethEnabled()) {\n      throw Error('Please install MetaMask to use this dApp!')\n    }\n  }\n\n  disconnectAccount = async () => {\n    await window.ethereum.request({\n      method: 'eth_requestAccounts',\n      params: [\n        {\n          eth_accounts: {},\n        },\n      ],\n    })\n\n    this.account = null\n  }\n\n  ethEnabled = () => {\n    if (window.ethereum) {\n      window.ethereum.enable()\n\n      return true\n    }\n\n    return false\n  }\n\n  fetchNetworkName = async () => {\n    this.networkType = await this.web3 && this.web3.eth.net.getNetworkType()\n    return this.networkType\n  }\n\n  fetchAccount = async () => {\n    const accounts = this.web3 && await this.web3.eth.getAccounts()\n\n    if (accounts && accounts.length) {\n      this.account = accounts[0]\n\n      return this.account\n    }\n\n    return null\n  }\n\n  hasWeb3 = () => !!this.web3 || !!window.web3 || !!window.ethereum\n\n  getAccoount = () => this.account\n  getNetworkName = () => this.networkType\n  isMainNetwork = () => this.networkType === 'main'\n\n  prepareWeb3 = async () => {\n    if (!window.ethereum) {\n      console.error('Need web3 provider in window')\n\n      return\n    }\n\n    this.web3 = new Web3(window.ethereum || Web3.givenProvider)\n\n    this.addListeners()\n\n    return this.web3\n  }\n}\n\nexport const Web3Provider = new Provider()\n","import { useCallback, useEffect, useState } from 'react'\nimport { Web3Provider } from '~/services/web3'\n\nexport const useMetamask = () => {\n  const [hasWeb3, setHasWeb3] = useState(false)\n  const [account, setAccount] = useState()\n\n  useEffect(() => {\n    if (Web3Provider.hasWeb3()) return setHasWeb3(true)\n    setHasWeb3(false)\n  }, [])\n\n  useEffect(() => {\n    const fetchAccounts = async () => {\n      const account = await Web3Provider.fetchAccount()\n      if (account) {\n        setAccount(account)\n      }\n    }\n\n    const timerId = setInterval(() => {\n      fetchAccounts()\n    }, 1000)\n\n    return () => {\n      clearInterval(timerId)\n    }\n  }, [])\n\n  const handleConnectWithMetamask = useCallback(() => {\n    return Web3Provider.connectWithMetamask()\n  }, [])\n\n  const handleDisconnectFromMetamask = useCallback(async () => {\n    return await Web3Provider.disconnectAccount()\n  }, [])\n\n  return {\n    hasWeb3,\n    account,\n    handleConnectWithMetamask,\n    handleDisconnectFromMetamask,\n  }\n}\n","import React, { useCallback, useMemo } from 'react'\nimport { Box, Button, Link, makeStyles, Tooltip, Typography } from '@material-ui/core'\nimport { useMetamask } from '~/hooks/useMetamask'\nimport { cutString } from '~/utils/cut-string'\n\nexport const MetamaskBtn = () => {\n  const { hasWeb3, account = '', handleConnectWithMetamask, handleDisconnectFromMetamask } = useMetamask()\n  const displayedAddress = useMemo(() => cutString(account, 12), [account])\n  const styles = useStyles()\n\n  const handleClick = useCallback(() => {\n    if (!account) {\n      handleConnectWithMetamask()\n\n      return\n    }\n\n    handleDisconnectFromMetamask()\n  }, [account, handleConnectWithMetamask, handleDisconnectFromMetamask])\n\n  if (!hasWeb3) {\n    return (\n      <Tooltip title=\"Need web3 provider\">\n        <Link className={styles.btn} href=\"https://metamask.io/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <Typography>Install MetaMask</Typography>\n        </Link>\n      </Tooltip>\n    )\n  }\n\n  return (\n    <>\n      <Button className={`${styles.btn} ${styles.hasAccount}`} onClick={handleClick}>\n        {account ? <AccountButton displayedAddress={displayedAddress} /> : 'Connect wallet'}\n      </Button>\n    </>\n  )\n}\n\nexport const AccountButton = ({displayedAddress }: { displayedAddress: string }) => {\n  const styles = useStyles()\n\n  return (\n    <Box className={styles.account}>\n      <Typography>{displayedAddress}</Typography>\n    </Box>\n  )\n}\n\nconst useStyles = makeStyles({\n  btn: {\n    borderRadius: 0,\n    border: '1px solid #fdff88',\n    color: '#fdff88',\n    padding: '14px 10px',\n    maxWidth: 182,\n    display: 'block',\n    textAlign: 'center',\n\n    '&:hover': {\n      textDecoration: 'none',\n    },\n  },\n  hasAccount: {\n    width: '100%',\n    minHeight: 60,\n  },\n  account: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  avatar: {\n    borderRadius: 50,\n    marginRight: 12,\n  },\n})\n","export const cutString = (str: string, size?: number): string => {\n  if (size && size - 5 < str.length) {\n    return `${str.slice(0, size - 5)}...${str.slice(-4)}`\n  }\n  return str\n}\n","export default __webpack_public_path__ + \"static/media/logo.d2086062.svg\";","import React, { useMemo } from 'react'\nimport { Box, Container, makeStyles, Typography } from '@material-ui/core'\nimport { NavLink } from 'react-router-dom'\nimport { MetamaskBtn } from './metamask-btn'\nimport logo from '~/assets/icons/logo.svg'\nimport { useSelector } from 'react-redux'\nimport { IStore } from '~/store/types'\n\nexport const Header = () => {\n  const styles = useStyles()\n  const { fetchedDomains } = useSelector((state: IStore) => state.domains)\n  const domainLength = useMemo(() => fetchedDomains.length, [fetchedDomains])\n  const availableDomainsLength = useMemo(() =>\n    fetchedDomains.filter(domain => domain.isAvailable).length, [fetchedDomains])\n\n  return (\n    <Box component=\"header\" py={4}>\n      <Container>\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Box flex={1}>\n            <NavLink to=\"/\">\n              <img src={logo} alt='' />\n            </NavLink>\n            <Typography color=\"primary\" className={styles.title}>\n              #TheMetaverseFund\n            </Typography>\n            <Box>\n              <Typography color=\"textPrimary\" className={styles.subtitle}>\n                {domainLength} 24 .crypto {'&'} .zil domains for 1-year rent.\n              </Typography>\n              <a href=\"/#\" className={`${styles.subtitle} ${styles.link}`}>\n                <Typography>Read the lightpaper →</Typography>\n              </a>\n            </Box>\n          </Box>\n          <Box>\n            <MetamaskBtn />\n            <Box textAlign=\"right\" pt={3}>\n              <Typography color=\"textPrimary\" className={styles.counts}>\n                Available: {availableDomainsLength}\n              </Typography>\n              <Typography color=\"textPrimary\" className={styles.counts}>\n                Locked: {domainLength - availableDomainsLength}\n              </Typography>\n              <Box pt={1} />\n              <Typography color=\"textPrimary\" className={styles.counts}>\n                1 BTC = 1 BTC\n              </Typography>\n              <Typography color=\"textPrimary\" className={styles.counts}>\n                1 ETH = 1 ETH\n              </Typography>\n            </Box>\n          </Box>\n        </Box>\n      </Container>\n    </Box>\n  )\n}\n\nconst useStyles = makeStyles({\n  title: {\n    fontSize: 36,\n    fontWeight: 700,\n  },\n  subtitle: {\n    fontSize: 18,\n    fontWeight: 400,\n    display: 'inline',\n  },\n  counts: {\n    fontSize: 14,\n    fontWeight: 400,\n  },\n  link: {\n    color: '#fff',\n    fontSize: 18,\n    display: 'inline-block',\n    borderBottom: '1px solid #fdff88',\n    textDecoration: 'none',\n    marginLeft: 4,\n  },\n})\n","import React from 'react'\n\nexport const Footer = () => (<></>)\n","import React from 'react'\nimport { Box, Button, Container, makeStyles, Typography } from '@material-ui/core'\n\ntype ITab = {\n  type: string\n  title: string\n}\n\ntype Props = {\n  tabs: ITab[]\n  currentTabIndex: number\n  onChangeTab: (index: number) => void\n}\n\nexport const TabHead = ({ tabs, currentTabIndex, onChangeTab }: Props) => {\n  const styles = useStyles()\n\n  return (\n    <Box className={styles.container}>\n      <Container>\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Box flex={1} display=\"flex\" mx=\"-4px\" mr={1}>\n            {tabs.map(({ type, title }, index) => (\n              <Button key={type} className={`${styles.tab} ${index === currentTabIndex && styles.activeTab}`} onClick={() => onChangeTab(index)}>\n                <Typography className={styles.title}>{title}</Typography>\n              </Button>\n            ))}\n          </Box>\n          <Box>\n            <Button className={styles.btn}>\n              Side with the dao →\n            </Button>\n          </Box>\n        </Box>\n      </Container>\n    </Box>\n  )\n}\n\nconst useStyles = makeStyles({\n  container: {\n    background: 'linear-gradient(90deg, #2BB9EC 0%, #C696C6 51.04%, #EB73A8 97.4%)',\n  },\n  btn: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    color: '#2a282e',\n    border: '2px solid #2a282e',\n    padding: '10px',\n    maxWidth: 192,\n    whiteSpace: 'nowrap',\n    textOverflow: 'elipsis',\n    overflow: 'hidden',\n    width: '100%',\n    textTransform: 'uppercase',\n  },\n  tab: {\n    flex: 1,\n    position: 'relative',\n    padding: '12px 0',\n    margin: '0 4px',\n  },\n  title: {\n    width: '100%',\n    textAlign: 'left',\n    color: '#2a282e',\n    fontSize: 20,\n    fontWeight: 700,\n    textTransform: 'capitalize',\n  },\n  activeTab: {\n    '&::after': {\n      content: '\"\"',\n      position: 'absolute',\n      backgroundColor: '#fdff88',\n      height: 8,\n      left: 0,\n      right: 0,\n      bottom: 0,\n    },\n  },\n})\n","import React from 'react'\nimport { Box, Button, Container, makeStyles, Typography } from '@material-ui/core'\nimport { NavLink } from 'react-router-dom'\n\nexport type IBreadcrumb = {\n  title: string,\n  url?: string\n}\n\ntype Props = {\n  paths?: IBreadcrumb[],\n}\n\nexport const Breadcrumbs = ({ paths = [] }: Props) => {\n  const styles = useStyles()\n\n  return (\n    <Box className={styles.container} color=\"background.default\">\n      <Container>\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Box className={styles.content} mx=\"-4px\">\n            {paths.map((path, index) => {\n              return paths.length - 1 === index ? (\n                <>\n                  <Typography className={styles.link}>{path.title}</Typography>\n                </>\n              ) : (\n                <>\n                  <NavLink className={styles.link} to={path.url || '/'}><Typography className={styles.link}>{path.title}</Typography></NavLink>\n                  <Typography className={styles.link}>←</Typography>\n                </>\n              )\n            })}\n          </Box>\n          <Box>\n            <Button className={styles.btn}>\n              Side with the dao →\n            </Button>\n          </Box>\n        </Box>\n      </Container>\n    </Box>\n  )\n}\n\nconst useStyles = makeStyles({\n  container: {\n    background: 'linear-gradient(90deg, #2BB9EC 0%, #C696C6 51.04%, #EB73A8 97.4%)',\n    padding: '2px 0',\n  },\n  btn: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    color: '#2a282e',\n    border: '2px solid #2a282e',\n    padding: '10px',\n    maxWidth: 192,\n    whiteSpace: 'nowrap',\n    textOverflow: 'elipsis',\n    overflow: 'hidden',\n    width: '100%',\n    textTransform: 'uppercase',\n  },\n  link: {\n    fontSize: 20,\n    fontWeight: 700,\n    textDecoration: 'none',\n    color: '#2a282e',\n    margin: '0 4px',\n    textTransform: 'capitalize',\n  },\n  content: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n})\n","import React, { useCallback } from 'react'\nimport { useHistory } from 'react-router'\nimport { Box } from '@material-ui/core'\nimport { Header } from '~/components/header'\nimport { Footer } from '~/components/footer'\nimport { TabHead } from '~/components/tab-head'\nimport { Breadcrumbs, IBreadcrumb } from '~/components/breadcrumbs'\n\ntype Props = {\n  children: React.ReactChild | React.ReactChild[]\n  hasTabs?: boolean\n  hasBreadCrumbs?: boolean\n  currentTabIndex?: number\n  paths?: IBreadcrumb[]\n}\n\nconst tabs = [\n  {\n    type: 'domains',\n    title: 'Domains',\n    route: '/',\n  },\n  {\n    type: 'art',\n    title: 'Art',\n    route: '/art',\n  },\n]\n\nexport const DefaultLayout = ({\n  children,\n  hasTabs = true,\n  hasBreadCrumbs = false,\n  currentTabIndex = 0,\n  paths = [],\n}: Props) => {\n  const history = useHistory()\n\n  const onChangeTab = useCallback((currentIndex: number) => {\n    if (currentTabIndex === currentIndex) return\n\n    const tab = tabs[currentIndex]\n    history.push(tab.route)\n  }, [history, currentTabIndex])\n\n  return (\n    <Box display=\"flex\" flexDirection=\"column\" flex={1} bgcolor=\"background.default\">\n      <Header />\n      <Box component=\"main\" flex={1}>\n        {hasTabs && <TabHead tabs={tabs} currentTabIndex={currentTabIndex} onChangeTab={onChangeTab} />}\n        {hasBreadCrumbs && <Breadcrumbs paths={paths} />}\n        {\n          Array.isArray(children) ?\n            (\n              React.Children.map(children, ( child ) => <>{child}</>)\n            ) :\n            children\n        }\n      </Box>\n      <Footer />\n    </Box>\n  )\n}\n","import React from 'react'\nimport { Box, Container } from '@material-ui/core'\nimport { DefaultLayout } from '~/layouts/default-layout'\n\nexport const ArtsPage = () => {\n  return (\n    <DefaultLayout currentTabIndex={1}>\n      <Container>\n        <Box display=\"flex\" justifyContent=\"space-between\" pt={2}></Box>\n      </Container>\n    </DefaultLayout>\n  )\n}\n","import { Box, Container } from '@material-ui/core'\nimport React, { useMemo } from 'react'\nimport { useLocation } from 'react-router'\nimport { DefaultLayout } from '~/layouts/default-layout'\n\nconst paths = [\n  {\n    title: 'Domains',\n    url: '/',\n  },\n]\n\nexport const DomainPage = () => {\n  const location = useLocation()\n  const currentPaths = useMemo(() => [...paths, { title: location.pathname.replace('/', '') }], [location])\n\n  return (\n    <DefaultLayout hasTabs={false} hasBreadCrumbs paths={currentPaths}>\n      <Container>\n        <Box display=\"flex\" justifyContent=\"space-between\" pt={4}>\n          <Box flex={1}>\n          </Box>\n          <Box minWidth={252} maxWidth={252} ml={5}>\n\n          </Box>\n        </Box>\n      </Container>\n    </DefaultLayout>\n  )\n}\n","import { createSlice } from '@reduxjs/toolkit'\n\nexport type IDomain = {\n  name: string\n  categories?: string[]\n  price: number\n  isAvailable?: boolean,\n  whenAvailable?: string\n  picture?: string\n  color?: string\n  associatedHash: string\n}\n\nexport type IFilterType = {\n  title: string\n  type: string\n  selected: boolean\n}\n\nexport type IFilterAvailability = {\n  title: string\n  type: string\n  selected: boolean\n}\n\nexport type IDomainsReducer = {\n  filter: {\n    types: IFilterType[],\n    isAvailable: boolean,\n    availabilities: IFilterAvailability[]\n  }\n  fetchedDomains: IDomain[]\n  filteredDomains: IDomain[]\n}\n\nconst domainTypes = [\n  'Infrastructure',\n  'Community',\n  'Business',\n  'Trade',\n  'Development',\n  'Security',\n  'Finances',\n  'Asset',\n  'NFT',\n  'Regulation',\n]\n\nconst domainTypesWithFlags = domainTypes.map(type => ({ title: type, type, selected: false }))\n\nconst domainAvailabilities = [\n  {\n    title: 'In 1 month',\n    type: 'one_month',\n  },\n  {\n    title: 'In 6 month',\n    type: 'six_month',\n  },\n  {\n    title: 'In 1 hour',\n    type: 'one_hour',\n  },\n]\n\nconst availabilityTypesWithFlags = domainAvailabilities.map((availability: any) =>\n  ({ ...availability, selected: false }),\n)\n\nconst getDomainsByFilters = (domains: any | IDomain[], selectedTypes: string[]) => {\n  return domains.filter((domain: any | IDomain) => {\n    if (!selectedTypes.length) return domain\n\n    const availableType = selectedTypes.find(type =>\n      domain.categories && domain.categories.map((type: string) => type.toLowerCase()).includes(type.toLowerCase()))\n\n    return availableType\n  })\n}\n\nconst counter = createSlice({\n  name: 'domains',\n  initialState: {\n    filter: {\n      types: domainTypesWithFlags,\n      availabilities: availabilityTypesWithFlags,\n      isAvailable: false,\n    },\n    fetchedDomains: [],\n    filteredDomains: [],\n  },\n  reducers: {\n    setFilter: (state, action) => {\n      const { isAvailable, types } = action.payload\n      const filteredDomainsByTypes = getDomainsByFilters(\n        state.fetchedDomains,\n        types.filter((type: IFilterType) => type.selected).map(({ type }: Pick<IFilterType, 'type'>) => type),\n      )\n\n      const filteredDomainsByAvailability = filteredDomainsByTypes.filter(\n        (domain: IDomain) => isAvailable ? domain.isAvailable === isAvailable : domain,\n      )\n\n      state.filteredDomains = filteredDomainsByAvailability\n      state.filter.types = types\n      state.filter.isAvailable = isAvailable\n    },\n    setDomains: (state, action) => {\n      const fetchedDomains = action.payload\n      const filteredDomains = getDomainsByFilters(\n        action.payload,\n        state.filter.types.filter(type => type.selected).map(({ type }) => type),\n      )\n\n      state.fetchedDomains = fetchedDomains\n      state.filteredDomains = filteredDomains\n    },\n  },\n})\n\nexport const { reducer: domainsReducer } = counter\nexport const { setFilter, setDomains } = counter.actions\n","import React, { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Box, Button, Chip, FormControlLabel, makeStyles, Switch, Typography } from '@material-ui/core'\nimport { IStore } from '~/store/types'\nimport { setFilter } from '~/store/domains'\n\nexport const Filter = () => {\n  const { filter: { types, isAvailable }, filteredDomains } = useSelector((state: IStore) => state.domains)\n  const dispatch = useDispatch()\n  const styles = useStyles()\n  const filteredLength = useMemo(() => filteredDomains.length, [filteredDomains])\n\n  const handleTypeSelect = useCallback((selectedType) => {\n    const selectedTypes = types.map((type) =>\n      selectedType === type.type ? ({ ...type, selected: !type.selected }) : type)\n\n    dispatch(setFilter({ types: selectedTypes, isAvailable }))\n  }, [types, isAvailable, dispatch])\n\n  const onClear = useCallback(() => {\n    const all = types.map(type => ({ ...type, selected: false }))\n\n    dispatch(setFilter({ types: all, isAvailable }))\n  }, [types, isAvailable, dispatch])\n\n  const handleChangeAvailability = useCallback(() => {\n    dispatch(setFilter({ types, isAvailable: !isAvailable }))\n  }, [types, isAvailable, dispatch])\n\n  return (\n    <Box component=\"aside\" display=\"flex\" flexDirection=\"column\" className={styles.container}>\n      <Box className={styles.innerContainer}>\n        <Box px={2} pt={2} pb={1} display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Typography component=\"label\" color=\"textPrimary\">Filters ({filteredLength})</Typography>\n          <Button className={styles.clear} onClick={onClear}>Clear</Button>\n        </Box>\n        <Box>\n          {types.map(({ type, title, selected }: any) => (\n            <Chip key={type} label={title} onClick={() => handleTypeSelect(type)} className={`${styles.chip} ${selected && styles.activeChip}`} clickable variant=\"outlined\" />\n          ))}\n        </Box>\n        <Box px={2} pt={2} pb={2} color=\"primary\">\n          <FormControlLabel\n            className={styles.formControl}\n            control={\n              <Switch\n                checked={isAvailable}\n                className={styles.switch}\n                onChange={handleChangeAvailability}\n                name=\"available.main\"\n              />\n            }\n            label=\"Available only\"\n          />\n        </Box>\n      </Box>\n    </Box>\n  )\n}\n\nconst useStyles = makeStyles({\n  container: {\n    border: '1px solid #fff',\n    padding: 2,\n  },\n  formControl: {\n    color: '#fdff88',\n    textTransform: 'uppercase',\n  },\n  switch: {\n    '.MuiSwitch-thumb': {\n      backgroundColor: 'transparent',\n      border: '1px solid #fdff88',\n    },\n  },\n  innerContainer: {\n    border: '2px solid #fff',\n  },\n  clear: {\n    padding: 0,\n    textTransform: 'none',\n    fontWeight: 400,\n    fontSize: 12,\n  },\n  chip: {\n    margin: 8,\n    color: '#fdff88',\n    borderColor: '#fdff88',\n    borderWidth: 2,\n    fontSize: 14,\n    fontWeight: 500,\n    padding: '12px 8px',\n  },\n  activeChip: {\n    color: '#2a282e',\n    backgroundColor: '#fdff88 !important',\n  },\n})\n","export default __webpack_public_path__ + \"static/media/not-available.d227c044.svg\";","export default __webpack_public_path__ + \"static/media/is-mine.19da38c1.svg\";","import React, { useMemo } from 'react'\nimport { Box, Chip, makeStyles, Typography } from '@material-ui/core'\nimport { IDomain } from '~/store/domains'\nimport { useMetamask } from '~/hooks/useMetamask'\nimport notAvailableIcon from '~/assets/icons/not-available.svg'\nimport isMineIcon from '~/assets/icons/is-mine.svg'\nimport { NavLink } from 'react-router-dom'\n\ntype Props = {\n  domain: IDomain\n}\n\nexport const Domain = ({ domain }: Props) => {\n  const styles = useStyles()\n  const { account } = useMetamask()\n  const { categories, name, price, isAvailable, associatedHash } = domain\n  const isMine = useMemo(() => associatedHash === account, [associatedHash, account])\n\n  return (\n    <NavLink className={styles.link} to={`/${name.toLowerCase()}`}>\n      <Box className={styles.card} style={{ backgroundColor: isMine ? '#65bd8d' : domain.color }} mb={2}>\n        <Box className={styles.cardInner}>\n          <Box display=\"flex\" justifyContent=\"space-between\">\n            <Box width=\"100%\">\n              {categories && categories.map((category) => (\n                <Chip key={category} label={category} className={`${styles.category} ${isMine && styles.contained}`} variant=\"outlined\" />\n              ))}\n            </Box>\n            <Box color=\"background.default\" minWidth={136} maxWidth={136}>\n              <Typography className={styles.perYear}>Per year</Typography>\n            </Box>\n          </Box>\n          <Box display=\"flex\" justifyContent=\"space-between\">\n            <Box color=\"background.default\" width=\"100%\">\n              <Typography className={`${styles.name} ${isAvailable && !isMine && styles.availableName}`}>{name}</Typography>\n            </Box>\n            <Box minWidth={136} maxWidth={136}>\n              <Box color=\"background.default\">\n                <Typography className={styles.price}>{price}</Typography>\n              </Box>\n              <Box color=\"background.default\">\n                <Typography className={styles.perYear}>0.0018 BTC</Typography>\n              </Box>\n              <Box color=\"background.default\">\n                <Typography className={styles.perYear}>45 US$</Typography>\n              </Box>\n            </Box>\n          </Box>\n          {!isAvailable && !isMine && <Box bgcolor=\"background.default\" className={styles.line} />}\n        </Box>\n        {!isAvailable && !isMine && (\n          <Box className={styles.badge} color=\"background.default\">\n            <img src={notAvailableIcon} className={styles.badgeIcon} alt=\"Not available\" />\n            <Typography className={styles.badgeText}>free<br />in<br />10 mos</Typography>\n          </Box>\n        )}\n        {isMine && (\n          <Box className={styles.badge} color=\"background.default\">\n            <img src={isMineIcon} className={styles.badgeIcon} alt=\"Its yours\" />\n            <Typography className={styles.badgeText}>Yours<br />for<br />10 mos</Typography>\n          </Box>\n        )}\n      </Box>\n    </NavLink>\n  )\n}\n\nconst useStyles = makeStyles({\n  link: {\n    color: 'inherit',\n    textDecoration: 'none',\n  },\n  card: {\n    backgroundColor: '#4f4f52',\n    position: 'relative',\n  },\n  cardInner: {\n    overflow: 'hidden',\n    padding: '12px 32px',\n    position: 'relative',\n  },\n  category: {\n    color: '#2a282e',\n    borderWidth: 2,\n    borderColor: '#fdff88',\n    backgroundColor: '#fdff88',\n    fontSize: 14,\n    fontWeight: 500,\n    padding: '12px 8px',\n    margin: '0 8px 8px 0',\n  },\n  contained: {\n    backgroundColor: 'transparent',\n    borderColor: '#2a282e',\n  },\n  perYear: {\n    fontSize: 12,\n    fontWeight: 400,\n    textAlign: 'right',\n  },\n  name: {\n    fontSize: 36,\n    fontWeight: 700,\n    textTransform: 'uppercase',\n  },\n  availableName: {\n    borderBottom: '4px solid #fdff88',\n    display: 'inline-block',\n  },\n  price: {\n    fontSize: 24,\n    fontWeight: 700,\n    textAlign: 'right',\n  },\n  line: {\n    position: 'absolute',\n    right: '-20%',\n    width: '140%',\n    top: '50%',\n    height: 2,\n    transform: 'rotate(171.5deg)',\n  },\n  badge: {\n    position: 'absolute',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    top: -27,\n    right: '20%',\n    width: 136,\n    height: 136,\n  },\n  badgeIcon: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    zIndex: 0,\n  },\n  badgeText: {\n    fontSize: 14,\n    fontWeight: 700,\n    position: 'relative',\n    zIndex: 1,\n    textTransform: 'uppercase',\n    textAlign: 'center',\n  },\n})\n","import React, { useEffect } from 'react'\nimport { Box, Container } from '@material-ui/core'\nimport { DefaultLayout } from '~/layouts/default-layout'\nimport { Filter } from '~/components/filter'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setDomains } from '~/store/domains'\nimport { IStore } from '~/store/types'\nimport { Domain } from '~/components/domain'\n\nconst domains = [\n  {\n    name: 'unstoppableDomains.crypto',\n    categories: ['Development', 'NFT'],\n    price: 'Ξ0.045',\n    isAvailable: true,\n    whenAvailable: '1617161963969',\n    picture: '',\n    color: '#38B0E8',\n    associatedHash: '1',\n  },\n  {\n    name: 'blockchainua.crypto',\n    categories: ['Development'],\n    price: 'Ξ0.045',\n    isAvailable: false,\n    whenAvailable: '1617161963969',\n    picture: '',\n    color: '#F05E2B',\n    associatedHash: '0x68A133aeEb048c687c2e82cFb7ed7CFCD138591c',\n  },\n  {\n    name: 'block.crypto',\n    categories: ['Community'],\n    price: 'Ξ0.045',\n    isAvailable: false,\n    whenAvailable: '1617161963969',\n    picture: '',\n    color: '#F05E2B',\n    associatedHash: '1',\n  },\n]\n\nexport const MainPage = () => {\n  const { filteredDomains } = useSelector((state: IStore) => state.domains)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(setDomains(domains))\n  }, [dispatch])\n\n  return (\n    <DefaultLayout>\n      <Container>\n        <Box display=\"flex\" justifyContent=\"space-between\" pt={2}>\n          <Box minWidth={252} maxWidth={252} mr={1}>\n            <Filter />\n          </Box>\n          <Box flex={1}>\n            {filteredDomains.map(domain => (\n              <Domain domain={domain} key={domain.name} />\n            ))}\n          </Box>\n        </Box>\n      </Container>\n    </DefaultLayout>\n  )\n}","import React, { useEffect } from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n  withRouter,\n} from 'react-router-dom'\nimport { ArtsPage } from './pages/art'\nimport { DomainPage } from './pages/item'\nimport { MainPage } from './pages/main'\n\nconst ScrollToTop = withRouter(({ history }: any) => {\n  useEffect(() => {\n    const unlisten = history.listen(() => {\n      window.scrollTo(0, 0)\n    })\n    return () => {\n      unlisten()\n    }\n  }, [history])\n\n  return (null)\n})\nexport const Routes = () => (\n  <Router basename={process.env.REACT_APP_PUBLIC_URL_PATHNAME}>\n    <ScrollToTop />\n    <Switch>\n      <Route path=\"/\" exact component={MainPage} />\n      <Route path=\"/art\" exact component={ArtsPage} />\n      <Route path=\"/:domain\" exact component={DomainPage} />\n      <Redirect to=\"/\" />\n    </Switch>\n  </Router>\n)\n","import { configureStore } from '@reduxjs/toolkit'\nimport { domainsReducer } from './domains'\n\nexport const store = configureStore({\n  reducer: {\n    domains: domainsReducer,\n  },\n})\n","import { createMuiTheme } from '@material-ui/core/styles'\n// import purple from '@material-ui/core/colors/purple'\n// import green from '@material-ui/core/colors/green'\n\nexport const theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    background: {\n      default: '#2a292e',\n    },\n    primary: {\n      main: '#fdff88',\n    },\n  },\n  typography: {\n    fontFamily: 'IBM Plex Mono, monospace',\n    'fontSize': 14,\n    'fontWeightLight': 300,\n    'fontWeightRegular': 400,\n    'fontWeightMedium': 500,\n  },\n})\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { ThemeProvider } from '@material-ui/styles'\nimport 'normalize.css'\nimport './index.css'\nimport { reportWebVitals } from './reportWebVitals'\nimport { Routes } from './routes'\nimport { store } from './store'\nimport { theme } from './theme'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <Routes />\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}