{"version":3,"sources":["reportWebVitals.ts","services/config.ts","services/web3.ts","hooks/useMetamask.ts","utils/cut-string.ts","components/metamask-btn.tsx","assets/icons/logo.svg","components/header.tsx","components/footer.tsx","components/tab-head.tsx","components/breadcrumbs.tsx","layouts/default-layout.tsx","pages/art/index.tsx","pages/dao/index.tsx","assets/icons/is-mine.svg","store/mock-domains.ts","store/domains.ts","assets/icons/metamask-fox.svg","assets/icons/check.svg","assets/icons/validmine.svg","components/metamask-rent.tsx","pages/item/index.tsx","components/filter.tsx","assets/icons/not-available.svg","components/domain.tsx","pages/main/index.tsx","routes.tsx","store/index.ts","theme.ts","index.tsx"],"names":["onPerfEntry","daiAbi","contracts","token","address","abi","tusd","tusdVault","stacking","vault","defaultAccount","ethBalance","tusdBalance","tokenBalance","Web3Provider","ethereum","window","accountAddress","provider","signer","contract","account","BehaviorSubject","prices","userData","networkType","init","a","getRates","hasWeb3","ethers","providers","getSigner","connectContracts","on","accounts","next","updateBalances","subscribe","filter","filters","Transfer","isMetaMaskInstalled","Boolean","isMetaMask","Object","entries","key","value","Contract","connectWallet","request","method","nextAccount","handleError","refresh","fetch","then","response","json","data","usd","tether","bitcoin","getEthBalance","getBalance","result","formated","utils","formatEther","parseFloat","getTUSDBalance","balanceOf","formatUnits","getUserData","disconnectAccount","params","eth_accounts","fetchAccount","web3","this","contractName","formatUnit","getValue","deposited","withdrawn","liquidity","totalDeposited","totalWithdrawn","liquidityRaw","getTotalValueLocked","cap","supply","totalCap","totalSupply","console","error","liquidityAmount","totalCapAmount","totalSupplyAmount","profit","ernings","vaultBalance","current","currentAPY","totalLocked","depositedTotal","liquidityPrice","getBlockNumber","getCurrentAPY","toNumber","amount","Error","plt","spendingToken","liquidityContract","units","v","parseUnits","toString","spender","approve","tx","log","waitForTransaction","hash","deposit","sendTransaction","to","withdraw","withdrawETH","debug","useMetamask","useState","setHasWeb3","setAccount","useEffect","fetchAccounts","clearInterval","timerId","setInterval","handleConnectWithMetamask","useCallback","handleDisconnectFromMetamask","cutString","str","size","length","slice","MetamaskBtn","displayedAddress","useMemo","styles","useStyles","handleClick","Button","className","btn","hasAccount","onClick","Tooltip","title","Link","href","target","rel","Typography","AccountButton","Box","makeStyles","borderRadius","border","color","padding","maxWidth","display","textAlign","textDecoration","width","minHeight","justifyContent","alignItems","avatar","marginRight","Header","invertedColors","fetchedDomains","useSelector","state","domains","domainLength","availableDomainsLength","domain","isAvailable","rates","useObservable","component","py","Container","flex","src","logo","alt","invertedColorTitle","subtitle","link","pt","counts","fontSize","fontWeight","borderBottom","marginLeft","Footer","TabHead","tabs","currentTabIndex","onChangeTab","container","mx","mr","map","index","type","tab","activeTab","background","whiteSpace","textOverflow","overflow","textTransform","position","margin","content","backgroundColor","height","left","right","bottom","Breadcrumbs","paths","invertedContainerBackground","path","url","route","DefaultLayout","children","hasTabs","hasBreadCrumbs","history","useHistory","currentIndex","push","flexDirection","bgcolor","Array","isArray","React","Children","child","ArtsPage","DaoPage","location","useLocation","currentPaths","pathname","replace","isLoading","setLoading","stepType","setStepType","depositAmount","setDepositAmount","withdrawAmount","setWithdrawAmount","vaultData","balance","setBalance","info","onApprove","finally","onDeposit","onWithdraw","mt","card","cardInner","TextField","onChange","e","input","disabled","opacity","domainsWithCategories","name","categories","domainTypesWithFlags","selected","availabilityTypesWithFlags","availability","getDomainsByFilters","selectedTypes","find","toLowerCase","includes","counter","createSlice","initialState","types","availabilities","filteredDomains","reducers","setFilter","action","payload","filteredDomainsByAvailability","setDomains","domainsCats","finded","withCats","domainsReducer","reducer","actions","MetamaskRent","hovered","setIsHover","isRentWay","setRent","isPurchaseWay","setPurchase","setHash","isMine","associatedHash","onRent","handleConnect","onBack","isValidHash","substr","validForm","pb","validMineIcon","secured","align","cardHovered","variant","checkIcon","check","foxCard","foxCardShowed","metamaskFoxIcon","fox","foxHovered","foxShowed","rowsMax","multiline","onMouseEnter","onMouseLeave","transform","transition","top","price","whenAvailable","picture","DomainPage","dispatch","useDispatch","category","Chip","label","minWidth","perYear","availableName","badge","isMineIcon","badgeIcon","badgeText","style","ml","borderWidth","borderColor","contained","zIndex","Filter","filteredLength","handleTypeSelect","selectedType","onClear","all","handleChangeAvailability","innerContainer","px","clear","chip","activeChip","clickable","FormControlLabel","formControl","control","Switch","checked","switch","Domain","mb","line","notAvailableIcon","MainPage","ScrollToTop","withRouter","unlisten","listen","scrollTo","Routes","basename","process","exact","store","configureStore","theme","createMuiTheme","palette","default","primary","main","typography","fontFamily","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById","Function","getCLS","getFID","getFCP","getLCP","getTTFB"],"mappings":"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","file":"static/js/main.b20bfc39.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals'\n\nexport const reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n","\nexport const stakingAbi = [\n  'function getUserData(address) view returns (uint, uint, uint, uint)',\n  'function getCurrentAPY() view returns (uint)',\n  'function totalValueLocked() view returns (uint)',\n\n  'event Deposit(address indexed sender, uint amount)',\n  'event Withdraw(address indexed sender, uint amount)',\n\n  'function withdraw(uint amount)',\n  'function deposit(uint amount)',\n]\n\nexport const daiAbi = [\n  // Some details about the token\n  'function name() view returns (string)',\n  'function symbol() view returns (string)',\n  'function allowance(address owner, address spender) view returns (uint)',\n\n  // Get the account balance\n  'function balanceOf(address) view returns (uint)',\n  'function vestedAmount(address) view returns (uint)',\n\n  // Send some of your tokens to someone else\n  'function transfer(address to, uint amount)',\n\n  // An event triggered whenever anyone transfers to someone else\n  'event Transfer(address indexed from, address indexed to, uint amount)',\n  // An event triggered whenever anyone make approve\n  'event Approval(address indexed owner, address indexed spender, uint amount)',\n\n  'function approve(address to, uint amount)',\n]\n\nexport const vaultAbi = [\n  // (totalCap, totalSupply)\n  'function getTotalValueLocked() view returns (uint, uint)',\n  // (totalDeposited, totalWithdrawn, liquidity)\n  'function getUserData(address) view returns (uint, uint, uint)',\n\n  'function plt() view returns (address)',\n\n  'function withdraw(uint amount)',\n  'function withdrawETH(uint amount)',\n  'function deposit(uint amount)',\n\n\n  'event Deposit(address indexed who, uint amount)',\n  'event Withdraw(address indexed who, uint amount)',\n]\n\nexport const contracts = {\n  token: {\n    address: '0x523a7fe78f3b11eff51441e3fcc95cb94a37d25c',\n    abi: daiAbi,\n  },\n  tusd: {\n    address: '0xf37350Aa68cC03a72052E912d71D0CbD7b343311',\n    abi: daiAbi,\n  },\n  tusdVault: {\n    address: '0x79EC44666317702AC37A57ae62254E7C3bEEbca1',\n    abi: vaultAbi,\n  },\n  stacking: {\n    address: '0x523a7fe78f3b11eff51441e3fcc95cb94a37d25c',\n    abi: stakingAbi,\n  },\n}\n\nexport const vault = {\n  name: 'tUSD Staking Vault',\n  symbol: 'tUSD',\n  color: 'red',\n  deposited: 0,\n  amount: 0,\n  profit: 0,\n  earned: 0,\n  currentAPY: 0,\n  vaultContract: 'tusdVault',\n  shouldApproveDeposit: true,\n  shouldApproveWithdraw: false,\n}\n","import { ethers } from 'ethers'\nimport { BehaviorSubject } from 'rxjs'\nimport { contracts, daiAbi, vault } from './config'\nexport interface Account {\n  address: string;\n  ethBalance: number;\n  tusdBalance: number;\n  tokenBalance: number;\n}\n\nconst defaultAccount: Account = {\n  address: '',\n  ethBalance: 0,\n  tusdBalance: 0,\n  tokenBalance: 0,\n}\n\nclass Provider {\n  private ethereum = (window as any).ethereum\n  private accountAddress: string = ''\n  private provider: ethers.providers.Web3Provider | null = null\n  public signer: ethers.providers.JsonRpcSigner | null = null\n  public contract: { [key: string]: ethers.Contract } = {}\n  public readonly account: BehaviorSubject<Account> = new BehaviorSubject(defaultAccount)\n  // [eth, usdt]\n  public readonly prices: BehaviorSubject<number[]> = new BehaviorSubject([0, 0, 0])\n  // [stakedBlock, current, deposited, withdraw]\n  public readonly userData: BehaviorSubject<number[]> = new BehaviorSubject([0, 0, 0, 0])\n\n  // private web3: any\n  // private account = null\n  public networkType: string = ''\n\n  constructor() {\n    this.init()\n  }\n\n  init = async () => {\n    this.getRates()\n    if (!this.hasWeb3()) return\n    this.provider = new ethers.providers.Web3Provider((window as any).ethereum)\n    this.signer = this.provider.getSigner()\n    this.connectContracts()\n    this.getRates()\n\n    this.ethereum.on('accountsChanged', (accounts: any[]) => {\n      this.account.next({ ...defaultAccount, address: accounts[0] || '' })\n      this.updateBalances()\n      this.getRates()\n    })\n\n    this.account.subscribe((account) => {\n      if (!account?.address) return\n\n      // A filter for when a specific address receives tokens\n      const filter = this.contract['token'].filters.Transfer(null, account.address)\n      this.contract['token'].on(filter, () => {\n        this.updateBalances()\n        this.getRates()\n      })\n    })\n\n    return true\n\n    // await this.prepareWeb3()\n    // await this.fetchNetworkName()\n  }\n\n  isMetaMaskInstalled = () => {\n    return Boolean((window as any).ethereum && (window as any).ethereum.isMetaMask)\n  }\n\n  connectContracts = () => {\n    if (!this.provider || !this.signer) return\n\n    for (const [key, value] of Object.entries(contracts)) {\n      this.contract[key] = new ethers.Contract(value.address, value.abi, this.signer)\n    }\n  }\n\n  public connectWallet = async () => {\n    if (!this.hasWeb3()) return\n\n    try {\n      const accounts = await this.ethereum.request({ method: 'eth_requestAccounts' })\n      const nextAccount = { ...defaultAccount, address: accounts[0] || '' }\n\n      this.accountAddress = accounts[0] || ''\n      this.account.next(nextAccount)\n      this.updateBalances(nextAccount)\n    } catch (error) {\n      this.handleError(error)\n    }\n\n    return this.accountAddress\n  }\n\n  public refresh = () => {\n    this.updateBalances()\n    this.getRates()\n  }\n\n  private getRates = () => {\n    fetch('https://api.coingecko.com/api/v3/simple/price?ids=tether%2Cethereum%2Cbitcoin&vs_currencies=usd')\n      .then(response => response.json())\n      .then(data => {\n        this.prices.next([data.ethereum.usd, data.tether.usd, data.bitcoin.usd])\n      })\n  }\n\n  // addListeners = () => {\n  //   window.ethereum.on('disconnect', (error: any) => {\n  //     console.log(error, 'disconnect error')\n  //   })\n\n  //   window.ethereum.on('connect', (error: any) => {\n  //     console.log(error, 'connect error')\n  //   })\n  // }\n\n  // public getTUSDVaultData = async (contractName = 'stacking'): Promise<any | null> => {\n  //   if (!this.contract[contractName]) return null\n\n  //   const [stakedBlock, currentAmount, depositedAmount, withdrawAmount] = await this.getUserData()\n  //   const currentBlock = await this.getCurrentBlock()\n  //   const currentAPY = await this.getCurrentAPY()\n  //   const totalLockedRaw = await this.contract[contractName].totalValueLocked()\n  //   const totalLocked = parseFloat(ethers.utils.formatEther(totalLockedRaw))\n\n  //   const deposited = currentAmount\n  //   const current = currentAmount * (1 + (currentBlock - stakedBlock) * currentAPY / 225405000)\n  //   const profit = (currentBlock - stakedBlock) * currentAmount * currentAPY / 225405000\n  //   const ernings = profit\n  //   const vaultBalance = 0\n  //   const liquidity = currentAmount + profit\n\n  //   const withdrawn = withdrawAmount\n  //   const depositedTotal = depositedAmount\n\n  //   const liquidityPrice = 0\n\n  //   return {\n  //     profit,\n  //     liquidity,\n  //     deposited,\n  //     liquidityPrice,\n  //     withdrawn,\n  //     current,\n  //     ernings,\n  //     vaultBalance,\n  //     currentAPY,\n  //     totalLocked,\n  //     depositedTotal,\n  //   }\n  // }\n\n  public async getVaultData(contractName: string, formatUnit = 'ether'): Promise<any | null> {\n    const accountAddress = this.account.getValue().address\n\n    if (!contractName || !this.contract[contractName] || !accountAddress) return null\n\n    let totalDeposited\n    let totalWithdrawn\n    let liquidityRaw\n    let totalCap\n    let totalSupply\n\n    try {\n      const [\n        deposited,\n        withdrawn,\n        liquidity,\n      ] = await this.contract[contractName].getUserData(accountAddress)\n      totalDeposited = deposited\n      totalWithdrawn = withdrawn\n      liquidityRaw = liquidity\n      const [cap, supply] = await this.contract[contractName].getTotalValueLocked()\n      totalCap = cap\n      totalSupply = supply\n    } catch (ex) {\n      console.error(ex)\n    }\n\n    const deposited = parseFloat(ethers.utils.formatUnits(totalDeposited, formatUnit))\n    const withdrawn = parseFloat(ethers.utils.formatUnits(totalWithdrawn, formatUnit))\n    const liquidityAmount = parseFloat(ethers.utils.formatUnits(liquidityRaw, formatUnit))\n    const totalCapAmount = parseFloat(ethers.utils.formatUnits(totalCap, formatUnit))\n    const totalSupplyAmount = parseFloat(ethers.utils.formatUnits(totalSupply, formatUnit))\n\n    const total = totalSupplyAmount\n      ? liquidityAmount * totalCapAmount / totalSupplyAmount\n      : 0\n\n    const profit = total - deposited + withdrawn\n    const ernings = (withdrawn - deposited) + liquidityAmount * totalCapAmount / totalSupplyAmount\n    const vaultBalance = liquidityAmount * totalCapAmount / totalSupplyAmount\n    const current = deposited - withdrawn\n    const liquidity = liquidityAmount\n    const currentAPY = vault.currentAPY || 0\n\n    const totalLocked = totalCapAmount\n    const depositedTotal = deposited\n    const liquidityPrice = totalCapAmount / totalSupplyAmount\n\n    return {\n      profit,\n      liquidity,\n      deposited,\n      liquidityPrice,\n      withdrawn,\n      current,\n      ernings,\n      vaultBalance,\n      currentAPY,\n      totalLocked,\n      depositedTotal,\n    }\n  }\n\n  public async getCurrentBlock(): Promise<number> {\n    return this.provider ? await this.provider?.getBlockNumber() : 0\n  }\n\n  public async getCurrentAPY(contractName = 'stacking'): Promise<number> {\n    if (!this.contract[contractName]) return 0\n\n    try {\n      const currentAPY = await this.contract[contractName].getCurrentAPY()\n      return currentAPY.toNumber()\n    } catch (error) {\n      this.handleError(error)\n    }\n\n    return 0\n  }\n\n\n  public async approve(amount: number, contract: string) {\n    if (!this.signer) throw Error('No signer')\n\n    const spendingToken = contract !== 'tusd'\n      ? await this.contract[contract].plt()\n      : this.contract['tusd'].address\n\n    const liquidityContract = new ethers.Contract(spendingToken, daiAbi, this.signer)\n    const units = contract === ('tusd' || 'tusdVault') ? 'mwei' : 'ether'\n    const v = ethers.utils.parseUnits(amount.toString(), units)\n\n    const spender = (contract === 'tusd') ? this.contract['tusdVault'].address : this.contract[contract].address\n\n    const tx = await liquidityContract.approve(spender, v)\n    console.log('liquidityContract tx: ', tx)\n    await this.signer.provider.waitForTransaction(tx.hash)\n  }\n\n\n  public async deposit(amount: number, contract: string) {\n    const units = contract === 'tusd' || 'tusdVault' ? 'mwei' : 'ether'\n    const v = ethers.utils.parseUnits(amount.toString(), units)\n    const tx = contract === 'tusd' || 'tusdVault'\n      ? await this.contract[contract].deposit(v)\n      : await this.signer?.sendTransaction({ to: this.contract[contract].address, value: v })\n\n    console.log('deposit tx: ', tx)\n    tx && await this.provider?.waitForTransaction(tx.hash)\n  }\n\n  public async withdraw(amount: number, contract: string) {\n    const units = contract === 'tusdVault' ? 'mwei' : 'ether'\n    const v = ethers.utils.parseUnits(amount.toString(), units)\n    console.log(units, v.toNumber(), this.contract[contract])\n\n    const tx = await (contract === 'tusdVault'\n      ? this.contract[contract].withdraw(v)\n      : this.contract[contract].withdrawETH(v))\n\n    console.log('tx: ', tx)\n    tx && await this.provider?.waitForTransaction(tx.hash)\n  }\n\n  private updateBalances(nextAccount?: Account) {\n    const account = nextAccount || this.account.getValue()\n    if (!account.address) return\n\n    this.getEthBalance(account.address)\n      .then(ethBalance => {\n        const account = this.account.getValue()\n        this.account.next({ ...account, ethBalance })\n      })\n\n    this.getTUSDBalance(account.address)\n      .then(tusdBalance => {\n        const account = this.account.getValue()\n        this.account.next({ ...account, tusdBalance: tusdBalance ? tusdBalance / 1000000000000 : tusdBalance })\n      })\n\n    // this.getUserData()\n    //   .then(r => {\n    //     this.userData.next(r)\n    //   })\n  }\n\n  getEthBalance = async (accountAddress: string) =>{\n    if (!this.provider || !accountAddress) return 0\n\n    const result = await this.provider.getBalance(accountAddress)\n    const formated = ethers.utils.formatEther(result)\n\n    return parseFloat(formated)\n  }\n\n  getTUSDBalance = async (accountAddress: string) => {\n    if (!this.contract['tusd'] || !accountAddress) return 0\n\n    const result = await this.contract['tusd'].balanceOf(accountAddress)\n    const formated = ethers.utils.formatUnits(result, 'mwei')\n\n    return parseFloat(formated)\n  }\n\n  getUserData = async () => {\n    return\n    // if (!this.contract['stacking'] || !this.accountAddress) return [0, 0, 0, 0]\n\n    // const [stacked, current, deposited, withdraw] = await this.contract['stacking'].getUserData(this.accountAddress)\n    // const currentAmount = parseFloat(ethers.utils.formatEther(current))\n    // const stakedBlock = parseFloat(stacked.toNumber())\n    // const depositedAmount = parseFloat(ethers.utils.formatEther(deposited))\n    // const withdrawAmount = parseFloat(ethers.utils.formatEther(withdraw))\n\n    // return [stakedBlock, currentAmount, depositedAmount, withdrawAmount]\n  }\n\n  // ERRORS handling\n\n  private handleError(error: any) {\n    console.debug(error)\n  }\n\n  // connectWithMetamask = () => {\n  //   if (!this.ethEnabled()) {\n  //     throw Error('Please install MetaMask to use this dApp!')\n  //   }\n  // }\n\n  disconnectAccount = async () => {\n    await this.ethereum.request({\n      method: 'eth_requestAccounts',\n      params: [\n        {\n          eth_accounts: {},\n        },\n      ],\n    })\n  }\n\n  // ethEnabled = () => {\n  //   if (window.ethereum) {\n  //     window.ethereum.enable()\n\n  //     return true\n  //   }\n\n  //   return false\n  // }\n\n  // fetchNetworkName = async () => {\n  //   this.networkType = await this.provider && this.provider.eth.net.getNetworkType()\n  //   return this.networkType\n  // }\n\n  fetchAccount = async () => {\n    // const accounts = this.web3 && await this.web3.eth.getAccounts()\n\n    // if (accounts && accounts.length) {\n    //   this.account = accounts[0]\n\n    //   return this.account\n    // }\n\n    // return null\n    return await this.connectWallet()\n  }\n\n  hasWeb3 = () => !!this.provider || !!window.web3 || !!window.ethereum\n\n  // getAccoount = () => this.account\n  // getNetworkName = () => this.networkType\n  // isMainNetwork = () => this.networkType === 'main'\n\n  // prepareWeb3 = async () => {\n  //   if (!window.ethereum) {\n  //     console.error('Need web3 provider in window')\n\n  //     return\n  //   }\n\n  //   this.web3 = new Web3(window.ethereum || Web3.givenProvider)\n  //   this.signer = this.web3.getSigner()\n\n  //   this.addListeners()\n\n  //   return this.web3\n  // }\n}\n\nexport const Web3Provider = new Provider()\n","import { useCallback, useEffect, useState } from 'react'\nimport { Web3Provider } from '~/services/web3'\n\nexport const useMetamask = () => {\n  const [hasWeb3, setHasWeb3] = useState(false)\n  const [account, setAccount] = useState('')\n\n  useEffect(() => {\n    if (Web3Provider.hasWeb3()) return setHasWeb3(true)\n    setHasWeb3(false)\n  }, [])\n\n  useEffect(() => {\n    const fetchAccounts = async () => {\n      const account = await Web3Provider.fetchAccount()\n      if (account) {\n        setAccount(account)\n        clearInterval(timerId)\n      }\n    }\n\n    const timerId = setInterval(() => {\n      fetchAccounts()\n    }, 1000)\n\n    return () => {\n      clearInterval(timerId)\n    }\n  }, [])\n\n  const handleConnectWithMetamask = useCallback(() => {\n    return Web3Provider.connectWallet()\n  }, [])\n\n  const handleDisconnectFromMetamask = useCallback(async () => {\n    return await Web3Provider.disconnectAccount()\n  }, [])\n\n  return {\n    hasWeb3,\n    account,\n    handleConnectWithMetamask,\n    handleDisconnectFromMetamask,\n  }\n}\n","export const cutString = (str: string, size?: number): string => {\n  if (size && size - 5 < str.length) {\n    return `${str.slice(0, size - 5)}...${str.slice(-4)}`\n  }\n  return str\n}\n","import React, { useCallback, useMemo } from 'react'\nimport { Box, Button, Link, makeStyles, Tooltip, Typography } from '@material-ui/core'\nimport { useMetamask } from '~/hooks/useMetamask'\nimport { cutString } from '~/utils/cut-string'\n\nexport const MetamaskBtn = () => {\n  const { hasWeb3, account = '', handleConnectWithMetamask, handleDisconnectFromMetamask } = useMetamask()\n  const displayedAddress = useMemo(() => cutString(account, 12), [account])\n  const styles = useStyles()\n\n  const handleClick = useCallback(() => {\n    if (!account) {\n      handleConnectWithMetamask()\n\n      return\n    }\n\n    handleDisconnectFromMetamask()\n  }, [account, handleConnectWithMetamask, handleDisconnectFromMetamask])\n\n  if (!hasWeb3) {\n    return (\n      <Tooltip title=\"Need web3 provider\">\n        <Link className={styles.btn} href=\"https://metamask.io/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <Typography>Install MetaMask</Typography>\n        </Link>\n      </Tooltip>\n    )\n  }\n\n  return (\n    <>\n      <Button className={`${styles.btn} ${styles.hasAccount}`} onClick={handleClick}>\n        {account ? <AccountButton displayedAddress={displayedAddress} /> : 'Connect wallet'}\n      </Button>\n    </>\n  )\n}\n\nexport const AccountButton = ({displayedAddress }: { displayedAddress: string }) => {\n  const styles = useStyles()\n\n  return (\n    <Box className={styles.account}>\n      <Typography>{displayedAddress}</Typography>\n    </Box>\n  )\n}\n\nconst useStyles = makeStyles({\n  btn: {\n    borderRadius: 0,\n    border: '1px solid #fdff88',\n    color: '#fdff88',\n    padding: '14px 10px',\n    maxWidth: 182,\n    display: 'block',\n    textAlign: 'center',\n\n    '&:hover': {\n      textDecoration: 'none',\n    },\n  },\n  hasAccount: {\n    width: '100%',\n    minHeight: 60,\n  },\n  account: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  avatar: {\n    borderRadius: 50,\n    marginRight: 12,\n  },\n})\n","export default __webpack_public_path__ + \"static/media/logo.d2086062.svg\";","import React, { useMemo } from 'react'\nimport { Box, Container, makeStyles, Typography } from '@material-ui/core'\nimport { NavLink } from 'react-router-dom'\nimport { MetamaskBtn } from './metamask-btn'\nimport logo from '~/assets/icons/logo.svg'\nimport { useSelector } from 'react-redux'\nimport { IStore } from '~/store/types'\nimport { useObservable } from 'rxjs-hooks'\nimport { Web3Provider } from '~/services/web3'\n\nexport const Header = ({ invertedColors = false }: { invertedColors?: boolean }) => {\n  const styles = useStyles()\n  const { fetchedDomains } = useSelector((state: IStore) => state.domains)\n  const domainLength = useMemo(() => fetchedDomains.length, [fetchedDomains])\n  const availableDomainsLength = useMemo(() =>\n    fetchedDomains.filter(domain => domain.isAvailable).length, [fetchedDomains])\n  const rates = useObservable(() => Web3Provider.prices)\n\n  return (\n    <Box component=\"header\" py={4}>\n      <Container>\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Box flex={1}>\n            <NavLink to=\"/\">\n              <img src={logo} alt='' />\n            </NavLink>\n            <Typography color=\"primary\" className={`${styles.title} ${invertedColors && styles.invertedColorTitle}`}>\n              #TheMetaverseFund\n            </Typography>\n            <Box>\n              <Typography color=\"textPrimary\" className={styles.subtitle}>\n                {domainLength} .crypto {'&'} .zil domains for 1-year rent.\n              </Typography>\n              <a\n                href=\"https://readymag.com/valeriiapanina/hackathon/\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                className={`${styles.subtitle} ${styles.link}`}\n              >\n                <Typography>Read the lightpaper →</Typography>\n              </a>\n            </Box>\n          </Box>\n          <Box>\n            <MetamaskBtn />\n            <Box textAlign=\"right\" pt={3}>\n              <Typography color=\"textPrimary\" className={styles.counts}>\n                Available: {availableDomainsLength}\n              </Typography>\n              <Typography color=\"textPrimary\" className={styles.counts}>\n                Locked: {domainLength - availableDomainsLength}\n              </Typography>\n              <Box pt={1} />\n              <Typography color=\"textPrimary\" className={styles.counts}>\n                1 BTC = {rates && rates[2]} USD\n              </Typography>\n              <Typography color=\"textPrimary\" className={styles.counts}>\n                1 ETH = {rates && rates[0]} USD\n              </Typography>\n            </Box>\n          </Box>\n        </Box>\n      </Container>\n    </Box>\n  )\n}\n\nconst useStyles = makeStyles({\n  title: {\n    fontSize: 36,\n    fontWeight: 700,\n  },\n  subtitle: {\n    fontSize: 18,\n    fontWeight: 400,\n    display: 'inline',\n  },\n  counts: {\n    fontSize: 14,\n    fontWeight: 400,\n  },\n  link: {\n    color: '#fff',\n    fontSize: 18,\n    display: 'inline-block',\n    borderBottom: '1px solid #fdff88',\n    textDecoration: 'none',\n    marginLeft: 4,\n  },\n  invertedColorTitle: {\n    color: '#e94a42',\n  },\n})\n","import React from 'react'\n\nexport const Footer = () => (<></>)\n","import React from 'react'\nimport { Box, Button, Container, makeStyles, Typography } from '@material-ui/core'\nimport { NavLink } from 'react-router-dom'\n\ntype ITab = {\n  type: string\n  title: string\n}\n\ntype Props = {\n  tabs: ITab[]\n  currentTabIndex: number\n  onChangeTab: (index: number) => void\n}\n\nexport const TabHead = ({ tabs, currentTabIndex, onChangeTab }: Props) => {\n  const styles = useStyles()\n\n  return (\n    <Box className={styles.container}>\n      <Container>\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Box flex={1} display=\"flex\" mx=\"-4px\" mr={1}>\n            {tabs.map(({ type, title }, index) => (\n              <Button key={type} className={`${styles.tab} ${index === currentTabIndex && styles.activeTab}`} onClick={() => onChangeTab(index)}>\n                <Typography className={styles.title}>{title}</Typography>\n              </Button>\n            ))}\n          </Box>\n          <Box>\n            <NavLink to=\"/dao\" className={styles.btn}>\n              <Typography>Side with the dao →</Typography>\n            </NavLink>\n          </Box>\n        </Box>\n      </Container>\n    </Box>\n  )\n}\n\nconst useStyles = makeStyles({\n  container: {\n    background: 'linear-gradient(90deg, #2BB9EC 0%, #C696C6 51.04%, #EB73A8 97.4%)',\n  },\n  btn: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    color: '#2a282e',\n    border: '2px solid #2a282e',\n    padding: '10px',\n    whiteSpace: 'nowrap',\n    textOverflow: 'elipsis',\n    overflow: 'hidden',\n    display: 'block',\n    textTransform: 'uppercase',\n    textDecoration: 'none',\n  },\n  tab: {\n    flex: 1,\n    position: 'relative',\n    padding: '12px 0',\n    margin: '0 4px',\n  },\n  title: {\n    width: '100%',\n    textAlign: 'left',\n    color: '#2a282e',\n    fontSize: 20,\n    fontWeight: 700,\n    textTransform: 'capitalize',\n  },\n  activeTab: {\n    '&::after': {\n      content: '\"\"',\n      position: 'absolute',\n      backgroundColor: '#fdff88',\n      height: 8,\n      left: 0,\n      right: 0,\n      bottom: 0,\n    },\n  },\n})\n","import React from 'react'\nimport { Box, Container, makeStyles, Typography } from '@material-ui/core'\nimport { NavLink } from 'react-router-dom'\n\nexport type IBreadcrumb = {\n  title: string,\n  url?: string\n}\n\ntype Props = {\n  paths?: IBreadcrumb[]\n  invertedColors?: boolean\n}\n\nexport const Breadcrumbs = ({ paths = [], invertedColors = false }: Props) => {\n  const styles = useStyles()\n\n  return (\n    <Box className={`${styles.container} ${invertedColors && styles.invertedContainerBackground}`} display=\"flex\" alignItems=\"center\" color=\"background.default\">\n      <Container>\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Box className={styles.content} mx=\"-4px\">\n            {paths.map((path, index) => {\n              return paths.length - 1 === index ? (\n                <Box key={index}>\n                  <Typography className={styles.link}>{path.title}</Typography>\n                </Box>\n              ) : (\n                <Box key={index} className={styles.content}>\n                  <NavLink className={styles.link} to={path.url || '/'}><Typography className={styles.link}>{path.title}</Typography></NavLink>\n                  <Typography className={styles.link}>←</Typography>\n                </Box>\n              )\n            })}\n          </Box>\n          {!invertedColors && (\n            <Box>\n              <NavLink to=\"/dao\" className={styles.btn}>\n                <Typography>\n                  Side with the dao →\n                </Typography>\n              </NavLink>\n            </Box>\n          )}\n        </Box>\n      </Container>\n    </Box>\n  )\n}\n\nconst useStyles = makeStyles({\n  container: {\n    background: 'linear-gradient(90deg, #2BB9EC 0%, #C696C6 51.04%, #EB73A8 97.4%)',\n    padding: '2px 0',\n    minHeight: 48,\n  },\n  invertedContainerBackground: {\n    background: 'linear-gradient(90deg, #E15958 0%, #EF9052 51.04%, #E8E679 97.4%);',\n  },\n  btn: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    color: '#2a282e',\n    border: '2px solid #2a282e',\n    padding: '10px',\n    whiteSpace: 'nowrap',\n    textOverflow: 'elipsis',\n    overflow: 'hidden',\n    display: 'block',\n    textTransform: 'uppercase',\n    textDecoration: 'none',\n  },\n  link: {\n    fontSize: 20,\n    fontWeight: 700,\n    textDecoration: 'none',\n    color: '#2a282e',\n    margin: '0 4px',\n    textTransform: 'capitalize',\n  },\n  content: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n})\n","import React, { useCallback } from 'react'\nimport { useHistory } from 'react-router'\nimport { Box } from '@material-ui/core'\nimport { Header } from '~/components/header'\nimport { Footer } from '~/components/footer'\nimport { TabHead } from '~/components/tab-head'\nimport { Breadcrumbs, IBreadcrumb } from '~/components/breadcrumbs'\n\ntype Props = {\n  children: React.ReactChild | React.ReactChild[]\n  hasTabs?: boolean\n  hasBreadCrumbs?: boolean\n  invertedColors?: boolean\n  currentTabIndex?: number\n  paths?: IBreadcrumb[]\n}\n\nconst tabs = [\n  {\n    type: 'domains',\n    title: 'Domains',\n    route: '/',\n  },\n  {\n    type: 'art',\n    title: 'Art',\n    route: '/art',\n  },\n]\n\nexport const DefaultLayout = ({\n  children,\n  hasTabs = true,\n  hasBreadCrumbs = false,\n  invertedColors = false,\n  currentTabIndex = 0,\n  paths = [],\n}: Props) => {\n  const history = useHistory()\n\n  const onChangeTab = useCallback((currentIndex: number) => {\n    if (currentTabIndex === currentIndex) return\n\n    const tab = tabs[currentIndex]\n    history.push(tab.route)\n  }, [history, currentTabIndex])\n\n  return (\n    <Box display=\"flex\" flexDirection=\"column\" flex={1} bgcolor=\"background.default\">\n      <Header invertedColors={invertedColors} />\n      <Box component=\"main\" flex={1}>\n        {hasTabs && <TabHead tabs={tabs} currentTabIndex={currentTabIndex} onChangeTab={onChangeTab} />}\n        {hasBreadCrumbs && <Breadcrumbs paths={paths} invertedColors={invertedColors} />}\n        {\n          Array.isArray(children) ?\n            (\n              React.Children.map(children, ( child ) => <>{child}</>)\n            ) :\n            children\n        }\n      </Box>\n      <Footer />\n    </Box>\n  )\n}\n","import React from 'react'\nimport { Box, Container } from '@material-ui/core'\nimport { DefaultLayout } from '~/layouts/default-layout'\n\nexport const ArtsPage = () => {\n  return (\n    <DefaultLayout currentTabIndex={1}>\n      <Container>\n        <Box display=\"flex\" justifyContent=\"space-between\" pt={2}></Box>\n      </Container>\n    </DefaultLayout>\n  )\n}\n","import { Box, Button, Container,  makeStyles, TextField, Typography } from '@material-ui/core'\nimport React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport { useLocation } from 'react-router'\nimport { useObservable } from 'rxjs-hooks'\nimport { DefaultLayout } from '~/layouts/default-layout'\n// import { vault } from '~/services/config'\nimport { Web3Provider } from '~/services/web3'\n\nconst paths = [\n  {\n    title: 'Home',\n    url: '/',\n  },\n]\n\nexport const DaoPage = () => {\n  const styles = useStyles()\n  const location = useLocation()\n  const currentPaths = useMemo(() => [...paths, { title: location.pathname.replace(/\\//gi, '') }], [location])\n  const [isLoading, setLoading] = useState(false)\n  const [stepType, setStepType] = useState('approve')\n  const [depositAmount, setDepositAmount] = useState('')\n  const [withdrawAmount, setWithdrawAmount] = useState('')\n\n  const [vaultData] = useState<any | null>(null)\n  const [balance, setBalance] = useState<number>(0)\n\n  const account = useObservable(() => Web3Provider.account)\n\n  useEffect(() => {\n    // Web3Provider.getVaultData(vault.vaultContract).then(setVaultData)\n    setBalance(account?.tusdBalance || 0)\n  }, [account])\n\n  console.info(isLoading, stepType, vaultData)\n\n  const onApprove = useCallback((amount: number, contract = 'tusdVault') => {\n    setLoading(true)\n    return Web3Provider.approve(amount / 1, contract)\n      .then(() => setStepType('approved'))\n      .finally(() => setLoading(false))\n  }, [])\n\n\n  const onDeposit = useCallback(async (amount: number) => {\n    setLoading(true)\n\n    return Web3Provider.deposit(amount, 'tusdVault')\n      .then(() => Web3Provider.refresh())\n      .then(() => setStepType('deposited'))\n      .finally(() => setLoading(false))\n  }, [])\n\n  const onWithdraw = async (amount: number) => {\n    setLoading(true)\n\n    return Web3Provider.withdraw(amount / 1000000000000, 'tusd')\n      .then(() => Web3Provider.refresh())\n      .then(() => setStepType('withdrawal'))\n      .finally(() => setLoading(false))\n  }\n\n  return (\n    <DefaultLayout hasTabs={false} hasBreadCrumbs paths={currentPaths} invertedColors>\n      <Container>\n        <Box flex={1} display=\"flex\" color=\"background.default\" mt={3} mx=\"-8px\">\n          <Box className={styles.card} flex={1} color=\"background.default\" mx=\"8px\">\n            <Box className={styles.cardInner}>\n              <Box display=\"flex\" justifyContent=\"space-between\">\n                <Typography>→ Deposit</Typography>\n                <Typography>\n                  Available: {balance} tUSDC2\n                </Typography>\n              </Box>\n              <Box>\n                <TextField\n                  value={depositAmount}\n                  onChange={e => setDepositAmount(e.target.value)}\n                  className={styles.input}\n                />\n              </Box>\n              <Box display=\"flex\" justifyContent=\"space-between\" mt={3}>\n                <Button className={styles.btn} disabled={!depositAmount || stepType !== 'approve'} onClick={() => onApprove(+depositAmount, 'tusd')}>\n                  I.\n                  {isLoading ? (\n                    <>\n                      {stepType === 'approved' ? 'Approved' : 'Approving'}\n                    </>\n                  ) : (\n                    <>\n                      {stepType !== 'approve' ? 'Approved' : 'Approve'}\n                    </>\n                  )}\n                </Button>\n                <Button className={styles.btn} disabled={stepType === 'deposited' || stepType !== 'approved'} onClick={() => onDeposit(+depositAmount)}>\n                  II.\n                  {isLoading ? (\n                    <>\n                      {stepType === 'deposited' ? 'Deposited' : 'Progress...'}\n                    </>\n                  ) : (\n                    <>\n                      {stepType === 'deposited' ? 'Deposited' : 'Deposite'}\n                    </>\n                  )}\n                </Button>\n              </Box>\n            </Box>\n          </Box>\n\n\n          <Box className={styles.card} flex={1} color=\"background.default\" mx=\"8px\">\n            <Box className={styles.cardInner}>\n              <Box display=\"flex\" justifyContent=\"space-between\">\n                <Typography>← Withdraw</Typography>\n                <Typography>\n                    Available: 0 tUSDC2\n                </Typography>\n              </Box>\n              <Box>\n                <TextField\n                  value={withdrawAmount}\n                  className={styles.input}\n                  onChange={(e) => setWithdrawAmount(e.target.value)}\n                />\n              </Box>\n              <Box display=\"flex\" justifyContent=\"space-between\" mt={3}>\n                <Button className={styles.btn} onClick={() => onApprove(+withdrawAmount, 'tusd')}>\n                  I. Approve\n                </Button>\n                <Button className={styles.btn} onClick={() => onWithdraw(+withdrawAmount)}>\n                  II. deposit\n                </Button>\n              </Box>\n            </Box>\n          </Box>\n        </Box>\n        <Box display=\"flex\" color=\"background.default\" mt={3} mx=\"-8px\">\n          <Box flex={1} display=\"flex\" justifyContent=\"space-between\" mx=\"8px\">\n            <Box>\n              <Typography color=\"textPrimary\">\n                Total earnings:\n              </Typography>\n              <Typography color=\"textPrimary\">\n                0 tUSDC2\n              </Typography>\n            </Box>\n            <Box>\n              <Typography color=\"textPrimary\">\n                Deposits:\n              </Typography>\n              <Typography color=\"textPrimary\">\n                0 tUSDC2\n              </Typography>\n            </Box>\n          </Box>\n\n          <Box flex={1} display=\"flex\" justifyContent=\"space-between\" mx=\"8px\">\n            <Box>\n              <Typography color=\"textPrimary\">\n                Withdrawals:\n              </Typography>\n              <Typography color=\"textPrimary\">\n                0 tUSDC2\n              </Typography>\n            </Box>\n            <Box>\n              <Typography color=\"textPrimary\">\n                Balance:\n              </Typography>\n              <Typography color=\"textPrimary\">\n                {balance} tUSDC2\n              </Typography>\n            </Box>\n          </Box>\n        </Box>\n      </Container>\n    </DefaultLayout>\n  )\n}\n\nconst useStyles = makeStyles({\n  card: {\n    backgroundColor: '#fff',\n    padding: 3,\n  },\n  cardInner: {\n    border: '2px solid #2a282e',\n    padding: 20,\n  },\n  input: {\n    width: '100%',\n\n    '& .MuiInputBase-root': {\n      color: '#2a282e',\n      borderBottom: '2px solid #2a282e',\n\n      '&.Mui-focused': {\n        border: 0,\n      },\n    },\n    '& .MuiInput-underline:after': {\n      border: '2px solid #38b0e8',\n    },\n  },\n  btn: {\n    color: '#2a282e',\n    backgroundColor: 'transparent',\n    border: '2px solid #2a282e',\n\n    '&:hover': {\n      backgroundColor: '#2a282e',\n      color: '#fff',\n    },\n\n    '&.MuiButton-root.Mui-disabled': {\n      color: '#2a282e',\n      opacity: 0.5,\n    },\n  },\n})\n","export default __webpack_public_path__ + \"static/media/is-mine.19da38c1.svg\";","export const domainsWithCategories = [\n  {\n    name: 'blockchain',\n    categories: ['infrastructure'],\n  },\n  {\n    name: 'hackathon',\n    categories: ['community'],\n  },\n  {\n    name: 'distributedlab',\n    categories: ['business'],\n  },\n  {\n    name: 'blockchainua',\n    categories: ['community'],\n  },\n  {\n    name: 'Peanut',\n    categories: ['trade', 'business'],\n  },\n  {\n    name: 'Metaverse',\n    categories: ['trade', 'business', 'community'],\n  },\n  {\n    name: 'MadfishSolutions',\n    categories: ['business', 'development'],\n  },\n  {\n    name: 'APYSwap',\n    categories: ['business', 'trade'],\n  },\n  {\n    name: 'Velas',\n    categories: ['business', 'development'],\n  },\n  {\n    name: 'unstoppableDomains',\n    categories: ['business', 'infrastructure'],\n  },\n  {\n    name: 'Hacken',\n    categories: ['business', 'infrastructure'],\n  },\n  {\n    name: 'JaxNetwork',\n    categories: ['business', 'security'],\n  },\n  {\n    name: 'RaymondCapital',\n    categories: ['business', 'finances'],\n  },\n  {\n    name: 'MatterLab',\n    categories: ['business', 'development'],\n  },\n  {\n    name: 'AML',\n    categories: ['business', 'security'],\n  },\n  {\n    name: 'Web3',\n    categories: ['infrastructure'],\n  },\n  {\n    name: 'NFT',\n    categories: ['infrastructure', 'asset'],\n  },\n  {\n    name: 'Metamask',\n    categories: ['infrastructure', 'business'],\n  },\n  {\n    name: 'TokenD',\n    categories: ['asset', 'business'],\n  },\n  {\n    name: 'FNA',\n    categories: ['business', 'NFT'],\n  },\n  {\n    name: 'SEC',\n    categories: ['regulation'],\n  },\n  {\n    name: 'BTC-E',\n    categories: ['business', 'trade'],\n  },\n  {\n    name: 'Bitcoin',\n    categories: ['infrastructure', 'asset'],\n  },\n  {\n    name: 'Etherium',\n    categories: ['infrastructure', 'asset'],\n  },\n  {\n    name: 'FBR',\n    categories: ['securty', 'infrastructure'],\n  },\n  {\n    name: 'FATF',\n    categories: ['securty', 'infrastructure'],\n  },\n]\n","import { createSlice } from '@reduxjs/toolkit'\nimport { domainsWithCategories } from './mock-domains'\n\nexport type IDomain = {\n  name: string\n  categories?: string[]\n  price: number\n  isAvailable?: boolean,\n  whenAvailable?: string\n  picture?: string\n  color?: string\n  associatedHash: string\n}\n\nexport type IFilterType = {\n  title: string\n  type: string\n  selected: boolean\n}\n\nexport type IFilterAvailability = {\n  title: string\n  type: string\n  selected: boolean\n}\n\nexport type IDomainsReducer = {\n  filter: {\n    types: IFilterType[],\n    isAvailable: boolean,\n    availabilities: IFilterAvailability[]\n  }\n  fetchedDomains: IDomain[]\n  filteredDomains: IDomain[]\n}\n\nconst domainTypes = [\n  'Infrastructure',\n  'Community',\n  'Business',\n  'Trade',\n  'Development',\n  'Security',\n  'Finances',\n  'Asset',\n  'NFT',\n  'Regulation',\n]\n\nconst domainTypesWithFlags = domainTypes.map(type => ({ title: type, type, selected: false }))\n\nconst domainAvailabilities = [\n  {\n    title: 'In 1 month',\n    type: 'one_month',\n  },\n  {\n    title: 'In 6 month',\n    type: 'six_month',\n  },\n  {\n    title: 'In 1 hour',\n    type: 'one_hour',\n  },\n]\n\nconst availabilityTypesWithFlags = domainAvailabilities.map((availability: any) =>\n  ({ ...availability, selected: false }),\n)\n\nconst getDomainsByFilters = (domains: any | IDomain[], selectedTypes: string[]) => {\n  return domains.filter((domain: any | IDomain) => {\n    if (!selectedTypes.length) return domain\n\n    const availableType = selectedTypes.find(type =>\n      domain.categories && domain.categories.map((type: string) => type.toLowerCase()).includes(type.toLowerCase()))\n\n    return availableType\n  })\n}\n\nconst concatDomainsWithCategoriesMock = (domains: IDomain[], domainsCats: Pick<IDomain, 'categories' | 'name'>[]) => {\n  return domains.map(domain => {\n    const finded = domainsCats.find(\n      (withCats: Pick<IDomain, 'categories' | 'name'>) =>\n        withCats.name.toLowerCase() === domain.name.toLowerCase().replace(/.crypto|.eth|.zip/gi, ''))\n\n    return {\n      ...domain,\n      ...(finded && { categories: finded.categories }),\n    }\n  }) as never[]\n}\n\nconst counter = createSlice({\n  name: 'domains',\n  initialState: {\n    filter: {\n      types: domainTypesWithFlags,\n      availabilities: availabilityTypesWithFlags,\n      isAvailable: false,\n    },\n    fetchedDomains: [],\n    filteredDomains: [],\n  },\n  reducers: {\n    setFilter: (state, action) => {\n      const { isAvailable, types } = action.payload\n      const filteredDomainsByTypes = getDomainsByFilters(\n        state.fetchedDomains,\n        types.filter((type: IFilterType) => type.selected).map(({ type }: Pick<IFilterType, 'type'>) => type),\n      )\n\n      const filteredDomainsByAvailability = filteredDomainsByTypes.filter(\n        (domain: IDomain) => isAvailable ? domain.isAvailable === isAvailable : domain,\n      )\n\n      state.filteredDomains = filteredDomainsByAvailability\n      state.filter.types = types\n      state.filter.isAvailable = isAvailable\n    },\n    setDomains: (state, action) => {\n      const fetchedDomains = concatDomainsWithCategoriesMock(action.payload, domainsWithCategories)\n      const filteredDomains = getDomainsByFilters(\n        fetchedDomains,\n        state.filter.types.filter(type => type.selected).map(({ type }) => type),\n      )\n\n      state.fetchedDomains = fetchedDomains\n      state.filteredDomains = filteredDomains\n    },\n  },\n})\n\nexport const { reducer: domainsReducer } = counter\nexport const { setFilter, setDomains } = counter.actions\n","export default __webpack_public_path__ + \"static/media/metamask-fox.cc27a5cd.svg\";","export default __webpack_public_path__ + \"static/media/check.835fe384.svg\";","export default __webpack_public_path__ + \"static/media/validmine.81316c29.svg\";","import { Box, Button, Link, makeStyles, TextField, Tooltip, Typography } from '@material-ui/core'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport metamaskFoxIcon from '~/assets/icons/metamask-fox.svg'\nimport checkIcon from '~/assets/icons/check.svg'\nimport validMineIcon from '~/assets/icons/validmine.svg'\nimport { useMetamask } from '~/hooks/useMetamask'\nimport { cutString } from '~/utils/cut-string'\nimport { IDomain } from '~/store/domains'\nimport { useHistory } from 'react-router'\n\nexport const MetamaskRent = ({ domain }: { domain: IDomain}) => {\n  const styles = useStyles()\n  const history = useHistory()\n  const [hovered, setIsHover] = useState(false)\n  const [isRentWay, setRent] = useState(false)\n  const [isPurchaseWay, setPurchase] = useState(false)\n  const [hash, setHash] = useState('')\n\n\n  const { hasWeb3, account = '', handleConnectWithMetamask } = useMetamask()\n  const displayedAddress = useMemo(() => cutString(account, 12), [account])\n  const isMine = useMemo(() => domain.associatedHash === account, [domain, account])\n\n  const onRent = useCallback(() => {\n    setRent(true)\n    setIsHover(false)\n\n    if (account && hasWeb3) {\n      setPurchase(true)\n    }\n  }, [account, hasWeb3])\n\n  const handleConnect = useCallback(() => {\n    if (!account) {\n      handleConnectWithMetamask()\n\n      onRent()\n      return\n    }\n  }, [account, handleConnectWithMetamask, onRent])\n\n  const onBack = useCallback(() => {\n    setPurchase(false)\n    setRent(false)\n    setHash('')\n  }, [])\n\n  const isValidHash = useMemo<boolean>(() => hash.length === 46 && hash.substr(0, 2) === 'Qm', [hash])\n\n  if (isMine) {\n    return (\n      <Box component=\"aside\" color=\"background.default\" className={`${styles.card} ${styles.validForm}`}>\n        <Box className={styles.cardInner} display=\"flex\" flexDirection=\"column\">\n          <Box flex={1} color=\"background.default\" display=\"flex\" flexDirection=\"column\" justifyContent=\"center\">\n            <Box pb={3} display=\"flex\" justifyContent=\"center\">\n              <img src={validMineIcon} alt=\" \" />\n            </Box>\n            <Typography className={styles.secured} align=\"center\">Yay!<br />Secured!</Typography>\n          </Box>\n          <Box display=\"flex\" justifyContent=\"center\">\n            <Button className={styles.btn} onClick={() => history.push('/')}>\n              PICK ONE MORE\n            </Button>\n          </Box>\n        </Box>\n      </Box>\n    )\n  } else {\n    return (\n      <Box component=\"aside\" color=\"background.default\" className={`${styles.card} ${hovered && styles.cardHovered} ${isValidHash && styles.validForm}`}>\n        <Box className={styles.cardInner} display=\"flex\" flexDirection=\"column\">\n          {!isRentWay && <Typography className={styles.title} align=\"center\">Rent this domain</Typography>}\n          {(isRentWay || isPurchaseWay) && (\n            <Box position=\"relative\">\n              <Button\n                variant=\"text\"\n                className={styles.title}\n                onClick={onBack}\n              >← BACK</Button>\n              {isValidHash && <img src={checkIcon} className={styles.check} alt=\"check\" />}\n            </Box>\n          )}\n          {!isPurchaseWay && (\n            <Box className={`${styles.foxCard} ${isRentWay && styles.foxCardShowed}`}>\n              <img\n                src={metamaskFoxIcon}\n                className={`${styles.fox} ${!isRentWay && hovered && styles.foxHovered} ${isRentWay && styles.foxShowed}`}\n                alt=\"Metamask Fox\"\n              />\n            </Box>\n          )}\n          {isPurchaseWay && (\n            <Box flex={1} display=\"flex\" flexDirection=\"column\" justifyContent=\"space-between\">\n              <Typography className={styles.title} align=\"left\">Hash of your site on IPFS</Typography>\n              <Box>\n                <TextField\n                  className={styles.input}\n                  rowsMax={6}\n                  value={hash}\n                  onChange={(e) => setHash(e.target.value)}\n                  multiline\n                />\n              </Box>\n            </Box>\n          )}\n          <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" mt={3}>\n            {!isRentWay && !isPurchaseWay && (\n              <Button\n                variant=\"outlined\"\n                className={styles.btn}\n                onMouseEnter={() => setIsHover(true)}\n                onMouseLeave={() => setIsHover(false)}\n                onClick={onRent}\n              >\n                Rent!\n              </Button>\n            )}\n            {isRentWay && !isPurchaseWay && (\n              <>\n                {!hasWeb3 ? (\n                  <Tooltip title=\"Need web3 provider\">\n                    <Link className={styles.btn} href=\"https://metamask.io/\" target=\"_blank\" rel=\"noopener noreferrer\">\n                      <Typography>Install MetaMask</Typography>\n                    </Link>\n                  </Tooltip>\n                ) : (\n                  <Button className={styles.btn} onClick={handleConnect}>\n                    {account ? (\n                      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                        <Typography>{displayedAddress}</Typography>\n                      </Box>\n                    ) : 'Connect wallet'}\n                  </Button>\n                )}\n              </>\n            )}\n            {isPurchaseWay && (\n              <Button className={styles.btn} disabled={!isValidHash}>\n                PAY Ξ0.045\n              </Button>\n            )}\n          </Box>\n        </Box>\n      </Box>\n    )\n  }\n}\n\nconst useStyles = makeStyles({\n  fox: {\n    width: 184,\n    height: 184,\n    transform: 'translateY(70%)',\n    transition: '0.15s ease-out',\n  },\n  foxHovered: {\n    transform: 'translateY(35%)',\n  },\n  foxShowed: {\n    transform: 'translateY(0)',\n  },\n  title: {\n    fontSize: 16,\n    fontWeight: 700,\n    color: '#2a282e',\n    padding: 0,\n  },\n  secured: {\n    fontSize: 24,\n    fontWeight: 700,\n  },\n  card: {\n    backgroundColor: '#fff',\n    padding: 3,\n    minHeight: 320,\n    display: 'flex',\n  },\n  cardHovered: {\n    backgroundColor: '#f05e2b',\n  },\n  validForm: {\n    backgroundColor: '#5abe96',\n  },\n  cardInner: {\n    flex: 1,\n    border: '2px solid #2a282e',\n    padding: 20,\n  },\n  foxCard: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    overflow: 'hidden',\n    borderBottom: '2px solid #2a282e',\n  },\n  foxCardShowed: {\n    border: 0,\n  },\n  btn: {\n    color: '#2a282e',\n    backgroundColor: 'transparent',\n    border: '2px solid #2a282e',\n\n    '&:hover': {\n      backgroundColor: '#2a282e',\n      color: '#fff',\n    },\n\n    '&.MuiButton-root.Mui-disabled': {\n      color: '#2a282e',\n      opacity: 0.5,\n    },\n  },\n  input: {\n    '& .MuiInputBase-root': {\n      color: '#2a282e',\n      borderBottom: '2px solid #2a282e',\n\n      '&.Mui-focused': {\n        border: 0,\n      },\n    },\n    '& .MuiInput-underline:after': {\n      border: '2px solid #38b0e8',\n    },\n  },\n  check: {\n    position: 'absolute',\n    right: 0,\n    top: 0,\n  },\n})\n","import React, { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useLocation } from 'react-router'\nimport { Box, Chip, Container, makeStyles, Typography } from '@material-ui/core'\nimport isMineIcon from '~/assets/icons/is-mine.svg'\nimport { DefaultLayout } from '~/layouts/default-layout'\nimport { IDomain, setDomains } from '~/store/domains'\nimport { IStore } from '~/store/types'\nimport { MetamaskRent } from '~/components/metamask-rent'\nimport { useMetamask } from '~/hooks/useMetamask'\n\nconst paths = [\n  {\n    title: 'Domains',\n    url: '/',\n  },\n]\n\nconst domains = [\n  {\n    name: 'unstoppableDomains.crypto',\n    price: 'Ξ0.045',\n    isAvailable: true,\n    whenAvailable: '1617161963969',\n    picture: '',\n    color: '#38B0E8',\n    associatedHash: '1',\n  },\n  {\n    name: 'blockchainua.crypto',\n    price: 'Ξ0.045',\n    isAvailable: false,\n    whenAvailable: '1617161963969',\n    picture: '',\n    color: '#F05E2B',\n    associatedHash: '0x68A133aeEb048c687c2e82cFb7ed7CFCD138591c',\n  },\n  {\n    name: 'Metaverse.eth',\n    price: 'Ξ0.045',\n    isAvailable: false,\n    whenAvailable: '1617161963969',\n    picture: '',\n    color: '#F05E2B',\n    associatedHash: '1',\n  },\n]\n\nexport const DomainPage = () => {\n  const { account } = useMetamask()\n  const styles = useStyles()\n  const location = useLocation()\n  const currentPaths = useMemo(() => [...paths, { title: location.pathname.replace(/\\//gi, '') }], [location])\n\n  const { fetchedDomains } = useSelector((state: IStore) => state.domains)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    !fetchedDomains.length && dispatch(setDomains(domains))\n  }, [dispatch, fetchedDomains])\n\n\n  const domain = useMemo<IDomain | undefined>(\n    () => fetchedDomains.find(\n      domain => domain.name.toLowerCase() === currentPaths[currentPaths.length - 1].title.toLowerCase(),\n    ),\n    [fetchedDomains, currentPaths],\n  )\n\n  const isMine = useMemo(() => domain && domain.associatedHash === account, [domain, account])\n\n  return (\n    <DefaultLayout hasTabs={false} hasBreadCrumbs paths={currentPaths}>\n      <Container>\n        <Box display=\"flex\" justifyContent=\"space-between\" pt={4}>\n          <Box flex={1} display=\"flex\" flexDirection=\"column\" justifyContent=\"space-between\">\n            { domain ? (\n              <Box flex={1}>\n                <Box display=\"flex\" justifyContent=\"space-between\">\n                  <Box width=\"100%\">\n                    {domain.categories && domain.categories.map((category: string) => (\n                      <Chip key={category} label={category} className={styles.category} variant=\"outlined\" />\n                    ))}\n                  </Box>\n                  <Box minWidth={136} maxWidth={136}>\n                    <Typography className={styles.perYear} color=\"textPrimary\">Per year</Typography>\n                  </Box>\n                </Box>\n                <Box display=\"flex\" justifyContent=\"space-between\">\n                  <Box width=\"100%\">\n                    <Typography className={`${styles.name} ${styles.availableName}`} color=\"textPrimary\">{domain.name}</Typography>\n                  </Box>\n                  <Box minWidth={136} maxWidth={136}>\n                    <Box>\n                      <Typography className={styles.price} color=\"textPrimary\">{domain.price}</Typography>\n                    </Box>\n                    <Box>\n                      <Typography className={styles.perYear} color=\"textPrimary\">0.0018 BTC</Typography>\n                    </Box>\n                    <Box>\n                      <Typography className={styles.perYear} color=\"textPrimary\">45 US$</Typography>\n                    </Box>\n                  </Box>\n                </Box>\n                {isMine && (\n                  <Box className={styles.badge} color=\"background.default\">\n                    <img src={isMineIcon} className={styles.badgeIcon} alt=\"Its yours\" />\n                    <Typography className={styles.badgeText}>Yours<br />for<br />10 mos</Typography>\n                  </Box>\n                )}\n              </Box>\n            ) : null}\n            <Box>\n              <Typography color=\"textPrimary\" style={{ fontSize: 12 }}>\n                There’ll be terms and somehting else. A really small piece of text for the first iteration,\n                just for the  sake of the layout.\n              </Typography>\n            </Box>\n          </Box>\n          <Box minWidth={232} maxWidth={232} ml={5}>\n            {domain && <MetamaskRent domain={domain} />}\n          </Box>\n        </Box>\n      </Container>\n    </DefaultLayout>\n  )\n}\n\nconst useStyles = makeStyles({\n  category: {\n    color: '#2a282e',\n    borderWidth: 2,\n    borderColor: '#fdff88',\n    backgroundColor: '#fdff88',\n    fontSize: 14,\n    fontWeight: 500,\n    padding: '12px 8px',\n    margin: '0 8px 8px 0',\n  },\n  contained: {\n    backgroundColor: 'transparent',\n    borderColor: '#2a282e',\n  },\n  perYear: {\n    fontSize: 12,\n    fontWeight: 400,\n    textAlign: 'right',\n  },\n  name: {\n    fontSize: 36,\n    fontWeight: 700,\n    textTransform: 'uppercase',\n  },\n  availableName: {\n    borderBottom: '4px solid #fdff88',\n    display: 'inline-block',\n  },\n  price: {\n    fontSize: 24,\n    fontWeight: 700,\n    textAlign: 'right',\n  },\n  badge: {\n    position: 'relative',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: 136,\n    height: 136,\n  },\n  badgeIcon: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    zIndex: 0,\n  },\n  badgeText: {\n    fontSize: 14,\n    fontWeight: 700,\n    position: 'relative',\n    zIndex: 1,\n    textTransform: 'uppercase',\n    textAlign: 'center',\n  },\n})\n","import React, { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Box, Button, Chip, FormControlLabel, makeStyles, Switch, Typography } from '@material-ui/core'\nimport { IStore } from '~/store/types'\nimport { setFilter } from '~/store/domains'\n\nexport const Filter = () => {\n  const { filter: { types, isAvailable }, filteredDomains } = useSelector((state: IStore) => state.domains)\n  const dispatch = useDispatch()\n  const styles = useStyles()\n  const filteredLength = useMemo(() => filteredDomains.length, [filteredDomains])\n\n  const handleTypeSelect = useCallback((selectedType) => {\n    const selectedTypes = types.map((type) =>\n      selectedType === type.type ? ({ ...type, selected: !type.selected }) : type)\n\n    dispatch(setFilter({ types: selectedTypes, isAvailable }))\n  }, [types, isAvailable, dispatch])\n\n  const onClear = useCallback(() => {\n    const all = types.map(type => ({ ...type, selected: false }))\n\n    dispatch(setFilter({ types: all, isAvailable }))\n  }, [types, isAvailable, dispatch])\n\n  const handleChangeAvailability = useCallback(() => {\n    dispatch(setFilter({ types, isAvailable: !isAvailable }))\n  }, [types, isAvailable, dispatch])\n\n  return (\n    <Box component=\"aside\" display=\"flex\" flexDirection=\"column\" className={styles.container}>\n      <Box className={styles.innerContainer}>\n        <Box px={2} pt={2} pb={1} display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Typography component=\"label\" color=\"textPrimary\">Filters ({filteredLength})</Typography>\n          <Button className={styles.clear} onClick={onClear}>Clear</Button>\n        </Box>\n        <Box>\n          {types.map(({ type, title, selected }: any) => (\n            <Chip key={type} label={title} onClick={() => handleTypeSelect(type)} className={`${styles.chip} ${selected && styles.activeChip}`} clickable variant=\"outlined\" />\n          ))}\n        </Box>\n        <Box px={2} pt={2} pb={2} color=\"primary\">\n          <FormControlLabel\n            className={styles.formControl}\n            control={\n              <Switch\n                checked={isAvailable}\n                className={styles.switch}\n                onChange={handleChangeAvailability}\n                name=\"available.main\"\n              />\n            }\n            label=\"Available only\"\n          />\n        </Box>\n      </Box>\n    </Box>\n  )\n}\n\nconst useStyles = makeStyles({\n  container: {\n    border: '1px solid #fff',\n    padding: 2,\n  },\n  formControl: {\n    color: '#fdff88',\n    textTransform: 'uppercase',\n  },\n  switch: {\n    '.MuiSwitch-thumb': {\n      backgroundColor: 'transparent',\n      border: '1px solid #fdff88',\n    },\n  },\n  innerContainer: {\n    border: '2px solid #fff',\n  },\n  clear: {\n    padding: 0,\n    textTransform: 'none',\n    fontWeight: 400,\n    fontSize: 12,\n  },\n  chip: {\n    margin: 8,\n    color: '#fdff88',\n    borderColor: '#fdff88',\n    borderWidth: 2,\n    fontSize: 14,\n    fontWeight: 500,\n    padding: '12px 8px',\n  },\n  activeChip: {\n    color: '#2a282e',\n    backgroundColor: '#fdff88 !important',\n  },\n})\n","export default __webpack_public_path__ + \"static/media/not-available.d227c044.svg\";","import React, { useMemo } from 'react'\nimport { Box, Chip, makeStyles, Typography } from '@material-ui/core'\nimport { IDomain } from '~/store/domains'\nimport { useMetamask } from '~/hooks/useMetamask'\nimport notAvailableIcon from '~/assets/icons/not-available.svg'\nimport isMineIcon from '~/assets/icons/is-mine.svg'\nimport { NavLink } from 'react-router-dom'\n\ntype Props = {\n  domain: IDomain\n}\n\nexport const Domain = ({ domain }: Props) => {\n  const styles = useStyles()\n  const { account } = useMetamask()\n  const { categories, name, price, isAvailable, associatedHash } = domain\n  const isMine = useMemo(() => associatedHash === account, [associatedHash, account])\n\n  console.log(account, associatedHash, `${account}` === `${associatedHash}`, name)\n\n  return (\n    <NavLink className={styles.link} to={`/${name.toLowerCase()}`}>\n      <Box className={styles.card} style={{ backgroundColor: isMine ? '#65bd8d' : domain.color }} mb={2}>\n        <Box className={styles.cardInner}>\n          <Box display=\"flex\" justifyContent=\"space-between\">\n            <Box width=\"100%\">\n              {categories && categories.map((category) => (\n                <Chip key={category} label={category} className={`${styles.category} ${isMine && styles.contained}`} variant=\"outlined\" />\n              ))}\n            </Box>\n            <Box color=\"background.default\" minWidth={136} maxWidth={136}>\n              <Typography className={styles.perYear}>Per year</Typography>\n            </Box>\n          </Box>\n          <Box display=\"flex\" justifyContent=\"space-between\">\n            <Box color=\"background.default\" width=\"100%\">\n              <Typography className={`${styles.name} ${isAvailable && !isMine && styles.availableName}`}>{name}</Typography>\n            </Box>\n            <Box minWidth={136} maxWidth={136}>\n              <Box color=\"background.default\">\n                <Typography className={styles.price}>{price}</Typography>\n              </Box>\n              <Box color=\"background.default\">\n                <Typography className={styles.perYear}>0.0018 BTC</Typography>\n              </Box>\n              <Box color=\"background.default\">\n                <Typography className={styles.perYear}>45 US$</Typography>\n              </Box>\n            </Box>\n          </Box>\n          {!isAvailable && !isMine && <Box bgcolor=\"background.default\" className={styles.line} />}\n        </Box>\n        {!isAvailable && !isMine && (\n          <Box className={styles.badge} color=\"background.default\">\n            <img src={notAvailableIcon} className={styles.badgeIcon} alt=\"Not available\" />\n            <Typography className={styles.badgeText}>free<br />in<br />10 mos</Typography>\n          </Box>\n        )}\n        {isMine && (\n          <Box className={styles.badge} color=\"background.default\">\n            <img src={isMineIcon} className={styles.badgeIcon} alt=\"Its yours\" />\n            <Typography className={styles.badgeText}>Yours<br />for<br />10 mos</Typography>\n          </Box>\n        )}\n      </Box>\n    </NavLink>\n  )\n}\n\nconst useStyles = makeStyles({\n  link: {\n    color: 'inherit',\n    textDecoration: 'none',\n  },\n  card: {\n    backgroundColor: '#4f4f52',\n    position: 'relative',\n  },\n  cardInner: {\n    overflow: 'hidden',\n    padding: '12px 32px',\n    position: 'relative',\n  },\n  category: {\n    color: '#2a282e',\n    borderWidth: 2,\n    borderColor: '#fdff88',\n    backgroundColor: '#fdff88',\n    fontSize: 14,\n    fontWeight: 500,\n    padding: '12px 8px',\n    margin: '0 8px 8px 0',\n  },\n  contained: {\n    backgroundColor: 'transparent',\n    borderColor: '#2a282e',\n  },\n  perYear: {\n    fontSize: 12,\n    fontWeight: 400,\n    textAlign: 'right',\n  },\n  name: {\n    fontSize: 36,\n    fontWeight: 700,\n    textTransform: 'uppercase',\n  },\n  availableName: {\n    borderBottom: '4px solid #fdff88',\n    display: 'inline-block',\n  },\n  price: {\n    fontSize: 24,\n    fontWeight: 700,\n    textAlign: 'right',\n  },\n  line: {\n    position: 'absolute',\n    right: '-20%',\n    width: '140%',\n    top: '50%',\n    height: 2,\n    transform: 'rotate(171.5deg)',\n  },\n  badge: {\n    position: 'absolute',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    top: -27,\n    right: '20%',\n    width: 136,\n    height: 136,\n  },\n  badgeIcon: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    zIndex: 0,\n  },\n  badgeText: {\n    fontSize: 14,\n    fontWeight: 700,\n    position: 'relative',\n    zIndex: 1,\n    textTransform: 'uppercase',\n    textAlign: 'center',\n  },\n})\n","import React, { useEffect } from 'react'\nimport { Box, Container } from '@material-ui/core'\nimport { DefaultLayout } from '~/layouts/default-layout'\nimport { Filter } from '~/components/filter'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setDomains } from '~/store/domains'\nimport { IStore } from '~/store/types'\nimport { Domain } from '~/components/domain'\n\nconst domains = [\n  {\n    name: 'unstoppableDomains.crypto',\n    price: 'Ξ0.045',\n    isAvailable: true,\n    whenAvailable: '1617161963969',\n    picture: '',\n    color: '#38B0E8',\n    associatedHash: '1',\n  },\n  {\n    name: 'blockchainua.crypto',\n    price: 'Ξ0.045',\n    isAvailable: false,\n    whenAvailable: '1617161963969',\n    picture: '',\n    color: '#F05E2B',\n    associatedHash: '0x68A133aeEb048c687c2e82cFb7ed7CFCD138591c',\n  },\n  {\n    name: 'Metaverse.eth',\n    price: 'Ξ0.045',\n    isAvailable: false,\n    whenAvailable: '1617161963969',\n    picture: '',\n    color: '#F05E2B',\n    associatedHash: '1',\n  },\n]\n\nexport const MainPage = () => {\n  const { filteredDomains } = useSelector((state: IStore) => state.domains)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(setDomains(domains))\n  }, [dispatch])\n\n  return (\n    <DefaultLayout>\n      <Container>\n        <Box display=\"flex\" justifyContent=\"space-between\" pt={2}>\n          <Box minWidth={252} maxWidth={252} mr={1}>\n            <Filter />\n          </Box>\n          <Box flex={1}>\n            {filteredDomains.map(domain => (\n              <Domain domain={domain} key={domain.name} />\n            ))}\n          </Box>\n        </Box>\n      </Container>\n    </DefaultLayout>\n  )\n}","import React, { useEffect } from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n  withRouter,\n} from 'react-router-dom'\nimport { ArtsPage } from './pages/art'\nimport { DaoPage } from './pages/dao'\nimport { DomainPage } from './pages/item'\nimport { MainPage } from './pages/main'\n\nconst ScrollToTop = withRouter(({ history }: any) => {\n  useEffect(() => {\n    const unlisten = history.listen(() => {\n      window.scrollTo(0, 0)\n    })\n    return () => {\n      unlisten()\n    }\n  }, [history])\n\n  return (null)\n})\nexport const Routes = () => (\n  <Router basename={process.env.REACT_APP_PUBLIC_URL_PATHNAME}>\n    <ScrollToTop />\n    <Switch>\n      <Route path=\"/\" exact component={MainPage} />\n      <Route path=\"/art\" exact component={ArtsPage} />\n      <Route path=\"/dao\" exact component={DaoPage} />\n      <Route path=\"/:domain\" exact component={DomainPage} />\n      <Redirect to=\"/\" />\n    </Switch>\n  </Router>\n)\n","import { configureStore } from '@reduxjs/toolkit'\nimport { domainsReducer } from './domains'\n\nexport const store = configureStore({\n  reducer: {\n    domains: domainsReducer,\n  },\n})\n","import { createMuiTheme } from '@material-ui/core/styles'\n// import purple from '@material-ui/core/colors/purple'\n// import green from '@material-ui/core/colors/green'\n\nexport const theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    background: {\n      default: '#2a292e',\n    },\n    primary: {\n      main: '#fdff88',\n    },\n  },\n  typography: {\n    fontFamily: 'IBM Plex Mono, monospace',\n    'fontSize': 14,\n    'fontWeightLight': 300,\n    'fontWeightRegular': 400,\n    'fontWeightMedium': 500,\n  },\n})\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { ThemeProvider } from '@material-ui/styles'\nimport 'normalize.css'\nimport './index.css'\nimport { reportWebVitals } from './reportWebVitals'\nimport { Routes } from './routes'\nimport { store } from './store'\nimport { theme } from './theme'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <Routes />\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}